webpackHotUpdate(0,{

/***/ 22:
/***/ function(module, exports, __webpack_require__) {

	eval("var d3 = __webpack_require__(5);\nvar _  = __webpack_require__(30);\n\nvar utils = __webpack_require__(3);\nvar d3utils = __webpack_require__(45);\n\n__webpack_require__(6);\n__webpack_require__(8);\n__webpack_require__(10);\n__webpack_require__(12);\n__webpack_require__(14);\n__webpack_require__(28);\n__webpack_require__(16);\n__webpack_require__(18);\n__webpack_require__(20);\n__webpack_require__(1);\n__webpack_require__(24);\n__webpack_require__(26);\n\nvar current_view = utils.getQueryParams()['view'];\n\nd3.selection.prototype.moveToFront = function() {\n  return this.each(function() {\n    this.parentNode.appendChild(this);\n  });\n};\n\nd3.selection.prototype.moveToBack = function() {\n  return this.each(function() {\n    var firstChild = this.parentNode.firstChild;\n    if (firstChild) {\n      this.parentNode.insertBefore(this, firstChild);\n    }\n  });\n};\n\nfunction drawGraph() {\n  var wrap = d3utils.wrap;\n  var transformText = d3utils.transformText;\n  var translation = d3utils.translation;\n  var numCommas = d3utils.numCommas;\n\n  var width = 1000;\n  var height = 1000;\n\n  var filteredNodes;\n  var forProfitNodes;\n  var nonProfitNodes;\n  var individualNodes;\n  var governmentNodes;\n\n  var fiveMostConnectedForProfit = {};\n  var fiveMostConnectedNonProfit = {};\n  var fiveMostConnectedIndividuals = {};\n  var fiveMostConnectedGovernment = {};\n\n  var clearResetFlag = 1;\n\n  var collaborationConnections;\n  var dataConnections;\n  // var fundingConnections;\n  var investmentConnections;\n\n  var centeredNode = {};\n\n  var entitiesHash = {}; // lowercase\n  var locationsHash = {}; // Lowercase\n\n  var sortedNamesList = []; // Presentation\n  var sortedLocationsList = []; // Presentation\n  var sortedSearchList = []; // Presentation\n\n  var dataListSortedNames;\n  var dataListSortedLocations;\n\n  // var svg = d3.select(\".content\").append(\"svg\").attr(\"id\", \"network\").attr(\"height\", height).attr(\"width\", width).attr(\"viewBox\", \"0 0 800 800\").attr(\"preserveAspectRatio\", \"xMidYMid\");\n  //.attr(\"viewBox\", '0 0 800 800')\n  var svg = d3.select('.content')\n    .append('svg')\n    .attr(\"xmlns\", 'http://www.w3.org/2000/svg')\n    .attr(\"id\", 'network')\n    .attr(\"height\", height)\n    .attr(\"width\", width)\n    .style(\"top\", \"-50px\")\n    .style(\"position\", \"relative\");\n\n  // d3.select(\"svg\").on(\"dblclick.zoom\", null);\n  d3.select('body > nav > nav > div')\n    .append('div')\n    .attr('id', 'editBox')\n    .append('p')\n    .text('Edit')\n    .style('color', '#2e92cf');\n\n  //  document.createElement('svg')\n\n  var aspect = width / height;\n  var network = $('#network');\n  var container = network.parent();\n\n  $(window).on('resize', function() {\n    var targetWidth = container.width();\n    network.attr(\"width\", targetWidth);\n    network.attr(\"height\", Math.round(targetWidth / aspect));\n  }).trigger(\"resize\");\n\n  var viewBoxParameters = '0 0 ' + width + ' ' + height;\n\n  svg.attr(\"viewBox\", viewBoxParameters)\n    .attr(\"preserveAspectRatio\", 'xMidYMid');\n\n  //  Static Scale\n  //  Improve by dynamically obtaining min and max values\n  var empScale = d3.scale.sqrt().domain([10, 130000]).range([10, 50]);\n  var twitScale = d3.scale.sqrt().domain([10, 1000000]).range([10, 50]);\n\n\n  d3.json(\"/athena\", function(error, graph) {\n    console.log(\"error, graph\", error, graph);\n    //                 .attr(\"x\", 10)\n    //                 .attr(\"y\", 10)\n    //                 .attr(\"width\", width / 2 - 10 - 20)\n    //                 .attr(\"height\", height / 2 - 60 - 20)\n    //                 .style(\"fill\", \"rgb(242,80,34)\")\n    //                 .style(\"opacity\", 0.9)\n    //                 .style('pointer-events', 'none');\n\n    // d3.select(\"svg\").append(\"rect\")\n    //                 .attr(\"x\", width / 2 - 10 + 10)\n    //                 .attr(\"y\", 10)\n    //                 .attr(\"width\", width / 2 - 10 - 20)\n    //                 .attr(\"height\", height / 2 - 60 - 20)\n    //                 .style(\"fill\", \"rgb(127,186,0\")\n    //                 .style(\"opacity\", 0.9)\n    //                 .style('pointer-events', 'none');\n\n    // d3.select(\"svg\").append(\"rect\")\n    //                 .attr(\"x\", 10)\n    //                 .attr(\"y\", height / 2 - 60 + 10)\n    //                 .attr(\"width\", width / 2 - 10 - 20)\n    //                 .attr(\"height\", height / 2 - 60 - 20)\n    //                 .style(\"fill\", \"rgb(0,164,239)\")\n    //                 .style(\"opacity\", 0.9)\n    //                 .style('pointer-events', 'none');\n\n    // d3.select(\"svg\").append(\"rect\")\n    //                 .attr(\"x\", width / 2 - 10 + 10)\n    //                 .attr(\"y\", height / 2 - 60 + 10)\n    //                 .attr(\"width\", width / 2 - 10 - 20)\n    //                 .attr(\"height\", height / 2 - 60 - 20)\n    //                 .style(\"fill\", \"rgb(255,185,0)\")\n    //                 .style(\"opacity\", 0.9)\n    //                 .style('pointer-events', 'none');\n\n    var filteredNodes = graph.nodes;  //intercept location.\n    var fundingConnections = graph.funding_connections;\n    var investmentConnections = graph.investment_connections;\n    var collaborationConnections = graph.collaboration_connections;\n    var dataConnections = graph.data_connections;\n    var connections = fundingConnections\n      .concat(investmentConnections)\n      .concat(collaborationConnections)\n      .concat(dataConnections);\n\n    var connectionLinks = fundingConnections\n      .concat(investmentConnections)\n      .concat(collaborationConnections)\n      .concat(dataConnections);\n\n\n    var force = d3.layout.force()\n      .nodes(rawNodes)\n      .size([width, height])\n      .links(connections)\n      .linkStrength(0)\n      .charge(function(d) {\n        if (d.render === 1) {\n          if (d.employees !== null) {\n            return -6 * empScale(d.employees);\n          } else {\n            return -25;\n          }\n        } else {\n          return 0;\n        }\n      })\n      .linkDistance(50)\n\n\n    var drag = force.drag()\n      .on(\"dragstart\", drag)\n      .on(\"drag\", drag)\n      .on(\"dragend\", dragend);\n\n    //  FUNDINGS\n    fundLink = svg.selectAll(\".fund\")\n      .data(fundingConnections)\n      .enter().append(\"line\")\n      .attr(\"class\", \"fund\")\n      // .classed(\"visfund\", true)\n      .style(\"stroke\", \"rgb(111,93,168)\")\n      .style(\"stroke-width\", \"1\")\n      .style(\"opacity\", \"0.2\")\n      .style(\"visibility\", \"visible\");\n\n    //  INVESTMENTS\n    var investLink = svg.selectAll(\".invest\")\n      .data(investmentConnections)\n      .enter().append(\"line\")\n      .attr(\"class\", \"invest\")\n      // .classed(\"visinvest\", true)\n      .style(\"stroke\", \"rgb(38,114,114)\")\n      .style(\"stroke-width\", \"1\")\n      .style(\"opacity\", \"0.2\")\n      .style(\"visibility\", \"visible\");\n\n    //  COLLABORATIONS\n    porucsLink = svg.selectAll(\".porucs\")\n      .data(collaborationConnections)\n      .enter().append(\"line\")\n      .attr(\"class\", \"porucs\")\n      // .classed(\"visporucs\", true)\n      .style(\"stroke\", \"rgb(235,232,38)\")\n      .style(\"stroke-width\", \"1\")\n      .style(\"opacity\", \"0.2\")\n      .style(\"visibility\", \"visible\");\n\n    //  data\n    var dataLink = svg.selectAll(\".data\")\n      .data(dataConnections)\n      .enter().append(\"line\")\n      .attr(\"class\", \"data\")\n      // .classed(\"visdata\", true)\n      .style(\"stroke\", \"rgb(191,72,150)\")\n      .style(\"stroke-width\", \"1\")\n      .style(\"opacity\", \"0.2\")\n      .style(\"visibility\", \"visible\");\n\n    nodeInit = svg.selectAll(\".node\")\n      .data(filteredNodes)\n      .enter()\n      .append(\"g\")\n      .attr(\"class\", \"node\")\n      .style(\"visibility\", \"visible\")\n      .on('dblclick', dblclick)\n      .call(drag);\n\n    force.on(\"tick\", tick)\n      .start();\n    // data section\n    // combine collaboration and data\n\n    forProfitNodes = svg.selectAll('.node').filter(function(d) {\n      return d.type === \"For-Profit\";\n    }).sort(function(a, b) {\n      return a.weight - b.weight;\n    });\n    nonProfitNodes = svg.selectAll('.node').filter(function(d) {\n      return d.type === \"Non-Profit\";\n    }).sort(function(a, b) {\n      return a.weight - b.weight;\n    });\n    individualNodes = svg.selectAll('.node').filter(function(d) {\n      return d.type === \"Individual\";\n    }).sort(function(a, b) {\n      return a.weight - b.weight;\n    });\n    governmentNodes = svg.selectAll('.node').filter(function(d) {\n      return d.type === \"Government\";\n    }).sort(function(a, b) {\n      return a.weight - b.weight;\n    });\n\n    //  Select the nodes to choose for highlighting nickname on visualization (TOP 5)\n    forProfitNodes.each(function(d, i) {\n      if (i >= forProfitNodes[0].length - 5) fiveMostConnectedForProfit[d.name] = d.weight;\n    });\n    nonProfitNodes.each(function(d, i) {\n      if (i >= nonProfitNodes[0].length - 5) fiveMostConnectedNonProfit[d.name] = d.weight;\n    });\n    individualNodes.each(function(d, i) {\n      if (i >= individualNodes[0].length - 5) fiveMostConnectedIndividuals[d.name] = d.weight;\n    });\n    governmentNodes.each(function(d, i) {\n      if (i >= governmentNodes[0].length - 5) fiveMostConnectedGovernment[d.name] = d.weight;\n    });\n\n\n    var textElement = svg.selectAll('.node')\n      .append('text')\n      .text(function(d) {\n        return d.nickname;\n      })\n      .attr(\"x\", 0)\n      .attr(\"dy\", \"0.1em\")\n      .attr(\"y\", function(d) {\n        if (d.employees !== null)\n          return empScale(d.employees) + 10;\n        else\n          return 7 + 10;\n      }).style('opacity', function(d) {\n        var textOpacity;\n        if (d.type === \"For-Profit\")\n          textOpacity = (fiveMostConnectedForProfit.hasOwnProperty(d.name)) ? 1 : 0;\n        if (d.type === \"Non-Profit\")\n          textOpacity = (fiveMostConnectedNonProfit.hasOwnProperty(d.name)) ? 1 : 0;\n        if (d.type === \"Individual\")\n          textOpacity = (fiveMostConnectedIndividuals.hasOwnProperty(d.name)) ? 1 : 0;\n        if (d.type === \"Government\")\n          textOpacity = (fiveMostConnectedGovernment.hasOwnProperty(d.name)) ? 1 : 0;\n        return textOpacity;\n      }).style('font-size', '14px')\n      .style('color', '#FFFFFF')\n      .style('pointer-events', 'none');\n\n    var node = nodeInit.append(\"circle\")\n      .attr(\"r\", function(d) {\n        if (d.employees !== null)\n          return empScale(d.employees);\n        else\n          return \"7\";\n      })\n      .style(\"fill\", function(d) {\n        if (d.type !== null) {\n          if (d.type === \"Individual\")\n            return \"rgb(255,185,0)\";\n          if (d.type === \"Non-Profit\")\n            return \"rgb(0,164,239)\";\n          if (d.type === \"For-Profit\")\n            return \"rgb(127,186,0)\";\n          if (d.type === \"Government\")\n            return \"rgb(242,80,34)\";\n        }\n      })\n      .attr(\"cx\", function(d) {\n        return d.x;\n      })\n      .attr(\"cy\", function(d) {\n        return d.y;\n      })\n      .style(\"stroke-width\", '1.5px')\n      .style(\"stroke\", 'white')\n      .on('mouseover', handleNodeHover)\n      .on('mouseout', offNode)\n      .on('click', sinclick);\n\n    textElement.call(wrap, 80);\n\n    while (force.alpha() > 0.025) {\n      force.tick();\n    }\n\n\n    // Must adjust the force parameters...\n\n    function dblclick(d) {\n\n      d3.select(this).classed(\"fixed\", function(d) {\n        d.fixed = false;\n      });\n      d3.select(this).on('mousedown.drag', null);\n\n      var dblclickobject = (d3.select(this).data())[0];\n\n      var svgWidth = parseInt(svg.style(\"width\").substring(0, ((svg.style(\"width\")).length + 1) / 2));\n      var svgHeight = parseInt(svg.style(\"height\").substring(0, ((svg.style(\"height\")).length + 1) / 2));\n      var halfSVGWidth = parseInt(svgWidth / 2);\n      var halfSVGHeight = parseInt(svgHeight / 2);\n\n      multiplierX = svgWidth / width;\n      multiplierY = svgHeight / height;\n\n      scaledDX = multiplierX * d.x;\n      scaledDY = multiplierY * d.y;\n\n      centeredNode = jQuery.extend(true, {}, d);\n\n      // Half viewbox...\n      centeredNode.x = width / 2 - 10;\n      centeredNode.y = height / 2 - 60;\n\n      var force = d3.layout.force()\n        .nodes(rawNodes)\n        .size([width, height])\n        .links(connections)\n        .linkStrength(0)\n        .charge(function(d) {\n          // if (d.employees !== null)\n          //   return -5 * empScale(parseInt(d.employees));\n          // else\n          //   return -50;\n          if (d.render === 1) {\n            if (d.employees !== null)\n              return -6 * empScale(d.employees);\n            else\n              return -25;\n          } else\n            return 0;\n        })\n        .linkDistance(50)\n\n      .on(\"tick\", tick)\n        .start();\n      // for (var i = 0; i < 1; ++i) {\n      //                    force.tick();\n      //                }\n      //                force.stop();\n    }\n\n\n    function handleClickNodeHover(d) {\n      s = textDisplay(d);\n\n      webform = editDisplay(d);\n\n      // For editing the data displayed within the side panel.\n      d3.select('#edit')\n        .html(webform);\n\n      //  Printing to side panel within web application.\n      d3.select('#info')\n        .html(s)\n        .style('list-style', 'square');\n\n\n      d3.selectAll('#editCurrentInfo').on('click', function() {\n          prefillCurrent(d);\n        })\n        .on('mouseover', function() {\n          d3.select(this).style('cursor', 'pointer');\n          return d3.select('#editBox').style(\"visibility\", \"visible\");\n        })\n        .on('mousemove', function() {\n          return d3.select('#editBox').style(\"top\", (d3.event.pageY + 4) + \"px\").style(\"left\", (d3.event.pageX + 16) + \"px\");\n        })\n        .on('mouseout', function() {\n          return d3.select('#editBox').style(\"visibility\", \"hidden\");\n        });\n\n    }\n\n    function prefillCurrent(d) {\n      editForm();\n      preFillFormA(d);\n    }\n\n    function editDisplay(d) {\n      var webform = \"\";\n\n      webform += '<h1 id=\"edit-add-info\">' + '<i class=\"icon-plus on-left\"></i>' + 'Add Information' + '</h1>';\n\n      return webform;\n    }\n\n    function textDisplay(d) {\n      var s = \"\";\n\n      //  General Information\n      s += '<div style=\"height:30px\"><a style=\"float:right;\"><i id=\"editCurrentInfo\" class=\"icon-pencil on-left\"></i></a></div>';\n      s += '<h1>' + \"<a href=\" + '\"' + d.url + '\" target=\"_blank\">' + d.name + '</a></h1>';\n      s += '<h6>' + 'Type of Entity: ' + '</h6>' + ' <h5>' + d.type + '</h5>';\n\n\n      //do it here\n      //\n\n\n\n      if (d.location !== null) {\n        s += '<br/>' + '<h6> ' + 'Location:  ' + '</h6>';\n        var locationArray= d.location;\n\n        if (locationArray.length > 1) {\n          var locationArr = [];\n          s += '<br/> <h5><ul>';\n          locationArray.forEach(function(loc) {\n            locationArr.push(loc.location);\n\n          });\n          for (var count = 0; count < locationArr.length; count++) {\n            s += '<li style=\"display:block;\">' + '<h5><a class=\"click-location\" style=\"cursor:pointer;\">' + locationArr[count] + '</h5></a>' + '</li>';\n          }\n        }\n        else {\n          locationArray.forEach(function(loc) {\n            locString = loc.location;\n\n            s += '<h5><ul>'\n            s += '<li style=\"display:inline-block;\">' + '<h5><a class=\"click-location\" style=\"cursor:pointer;\">' + locString + '</h5></a>' + '</li>';\n          });\n        }\n        s += '</h5></ul><br/>';\n\n      } else {\n        s += '<br/>' + '<h6> ' + 'Location:  ' + '</h6>' + ' <h5>' + 'N/A' + '</h5>' + '<br/>';\n      }\n\n\n      if (d.type !== 'Individual') {\n        if (d.employees !== null) {\n          s += '<h6>' + 'Employees: ' + '</h6> <h5>' + numCommas(d.employees.toString()) + '</h5><br/>';\n        } else {\n          s += '<h6>' + 'Employees: ' + '</h6> <h5>' + 'N/A' + '</h5><br/>';\n        }\n      }\n\n      if (d.twitter_handle === null) {\n        s += '<h6>' + 'Twitter:  ' + '</h6> <h5>' + 'N/A' + '</h5><br/>';\n        s += '<h6>' + 'Twitter Followers: ' + '</h6> <h5>' + 'N/A' + '</h5><br/>';\n      } else {\n        var twitterLink = (d.twitter_handle).replace('@', '');\n\n\n        twitterLink = 'https://twitter.com/' + twitterLink;\n        s += '<h6>' + 'Twitter:  ' + '</h6> <h5>' + \"<a href=\" + '\"' + twitterLink + '\" target=\"_blank\">' + d.twitter_handle + '</h5></a><br/>';\n        if (d.followers !== null) {\n          s += '<h6>' + 'Twitter Followers:  ' + '</h6> <h5>' + numCommas(d.followers.toString()) + '</h5><br/>';\n        } else {\n          s += '<h6>' + 'Twitter Followers:  ' + '</h6> <h5>' + 'N/A' + '</h5><br/>';\n        }\n      }\n\n      //  KEY PEOPLE\n      if (d.key_people !== null) {\n        s += '<br/><h6>' + 'Key People:' + '</h6>' + '<ul><h5>';\n        for (var count = 0; count < d.key_people.length; count++) {\n          s += '<li>' + '<a href=\"http://www.bing.com/search?q=' + (d.key_people[count].name).replace(\" \", \"%20\") + '%20' + (d.nickname).replace(\" \", \"%20\") + '&go=Submit&qs=bs&form=QBRE\" target=\"_blank\">' + d.key_people[count].name + '</a>' + '</li>';\n        }\n        s += '</h5></ul>';\n      }\n\n      // //  FUNDING\n\n      if (d.funding_received === null) {\n        s += '<br/><h6>' + 'No known funding received.' + '</h6><br/>';\n      } else {\n        s += '<br/>' + '<h6>' + 'Received funding from:' + '</h6><ul>';\n        (d.funding_received).forEach(function(d) {\n          if (d.amount === 0 || d.amount === null) {\n            s += '<li><h5>' + '<a href=\"http://www.bing.com/search?q=' + (d.entity).replace(\" \", \"%20\") + '&go=Submit&qs=bs&form=QBRE\" target=\"_blank\">' + d.entity + '</a></h5>' + ': <strong style=\"color:rgb(255,185,0);\">unknown</strong>' + '</li>';\n          } else {\n            s += '<li><h5>' + '<a href=\"http://www.bing.com/search?q=' + (d.entity).replace(\" \", \"%20\") + '&go=Submit&qs=bs&form=QBRE\" target=\"_blank\">' + d.entity + '</a></h5>' + ': <strong style=\"color:rgb(127,186,0);\">$' + numCommas(d.amount.toString()) + '</strong>' + '</li>';\n          }\n          if (d.year === null) {\n\n          } else {\n\n          }\n        });\n        s += '</ul>'\n      }\n\n      if (d.funding_given === null) {\n        s += '<br/><h6>' + 'No known funding provided.' + '</h6><br/>';\n      } else {\n        s += '<br/>' + '<h6>' + 'Gave funding to:' + '</h6><ul>';\n        (d.funding_given).forEach(function(d) {\n          if (d.amount === 0 || d.amount === null) {\n            s += '<li><h5>' + '<a href=\"http://www.bing.com/search?q=' + (d.entity).replace(\" \", \"%20\") + '&go=Submit&qs=bs&form=QBRE\" target=\"_blank\">' + d.entity + '</a></h5>' + ': <strong style=\"color:rgb(255,185,0);\">unknown</strong>' + '</li>';\n          } else {\n            s += '<li><h5>' + '<a href=\"http://www.bing.com/search?q=' + (d.entity).replace(\" \", \"%20\") + '&go=Submit&qs=bs&form=QBRE\" target=\"_blank\">' + d.entity + '</a></h5>' + ': <strong style=\"color:rgb(127,186,0);\">$' + numCommas(d.amount.toString()) + '</strong>' + '</li>';\n          }\n          if (d.year === null) {\n\n          } else {\n\n          }\n        });\n        s += '</ul>'\n      }\n\n      if (d.investments_received === null) {\n        s += '<br/><h6>' + 'No known investments received.' + '</h6><br/>';\n      } else {\n        s += '<br/>' + '<h6>' + 'Received investments from:' + '</h6><ul>';\n        (d.investments_received).forEach(function(d) {\n          if (d.amount === 0 || d.amount === null) {\n            s += '<li><h5>' + '<a href=\"http://www.bing.com/search?q=' + (d.entity).replace(\" \", \"%20\") + '&go=Submit&qs=bs&form=QBRE\" target=\"_blank\">' + d.entity + '</a></h5>' + ': <strong style=\"color:rgb(255,185,0);\">unknown</strong>' + '</li>';\n          } else {\n            s += '<li><h5>' + '<a href=\"http://www.bing.com/search?q=' + (d.entity).replace(\" \", \"%20\") + '&go=Submit&qs=bs&form=QBRE\" target=\"_blank\">' + d.entity + '</a></h5>' + ': <strong style=\"color:rgb(127,186,0);\">$' + numCommas(d.amount.toString()) + '</strong>' + '</li>';\n          }\n          if (d.year === null) {\n\n          } else {\n\n          }\n        });\n        s += '</ul>'\n      }\n\n      if (d.investments_made === null) {\n        s += '<br/><h6>' + 'No known investments made.' + '</h6><br/>';\n      } else {\n        s += '<br/>' + '<h6>' + 'Invested in:' + '</h6><ul>';\n        (d.investments_made).forEach(function(d) {\n          if (d.amount === 0 || d.amount === null) {\n            s += '<li><h5>' + '<a href=\"http://www.bing.com/search?q=' + (d.entity).replace(\" \", \"%20\") + '&go=Submit&qs=bs&form=QBRE\" target=\"_blank\">' + d.entity + '</a></h5>' + ': <strong style=\"color:rgb(255,185,0);\">unknown</strong>' + '</li>';\n          } else {\n            s += '<li><h5>' + '<a href=\"http://www.bing.com/search?q=' + (d.entity).replace(\" \", \"%20\") + '&go=Submit&qs=bs&form=QBRE\" target=\"_blank\">' + d.entity + '</a></h5>' + ': <strong style=\"color:rgb(127,186,0);\">$' + numCommas(d.amount.toString()) + '</strong>' + '</li>';\n          }\n          if (d.year === null) {\n\n          } else {\n\n          }\n        });\n        s += '</ul>'\n      }\n\n      if (d.collaborations === null) {\n        s += '<br/><h6>' + 'No known collaborations.' + '</h6><br/>';\n      } else {\n        s += '<br/>' + '<h6>' + 'Collaborated with:' + '</h6><ul>';\n        (d.collaborations).forEach(function(d) {\n\n          s += '<li><h5>' + '<a href=\"http://www.bing.com/search?q=' + (d.entity).replace(\" \", \"%20\") + '&go=Submit&qs=bs&form=QBRE\" target=\"_blank\">' + d.entity + '</a></h5>' + '</li>';\n\n        });\n        s += '</ul>'\n      }\n\n      if (d.data === null) {\n        s += '<br/><h6>' + 'No known external data usage.' + '</h6><br/>';\n      } else {\n        s += '<br/>' + '<h6>' + 'Obtained data from:' + '</h6><ul>';\n        (d.data).forEach(function(d) {\n\n          s += '<li><h5>' + '<a href=\"http://www.bing.com/search?q=' + (d.entity).replace(\" \", \"%20\") + '&go=Submit&qs=bs&form=QBRE\" target=\"_blank\">' + d.entity + '</a></h5>' + '</li>';\n\n        });\n        s += '</ul>'\n      }\n\n\n      if (d.revenue === null) {\n        s += '<br/><h6>' + 'No known revenue information.' + '</h6><br/>';\n      } else {\n        s += '<br/>' + '<h6>' + 'Revenue:' + '</h6><ul>';\n        (d.revenue).forEach(function(d) {\n          if (d.amount === 0 || d.amount === null) {\n            if (d.year === null) {\n              s += '<li><h5>' + 'Unknown Year' + '</h5>' + ': <strong style=\"color:rgb(255,185,0);\">unknown</strong>' + '</li>';\n            } else {\n              s += '<li><h5>' + d.year + '</h5>' + ': <strong style=\"color:rgb(255,185,0);\">unknown</strong>' + '</li>';\n            }\n          } else {\n            if (d.year === null) {\n              s += '<li><h5>' + 'Unknown Year' + '</h5>' + ': <strong style=\"color:rgb(127,186,0);\">$' + numCommas(d.amount.toString()) + '</strong>' + '</li>';\n            } else {\n              s += '<li><h5>' + d.year + '</h5>' + ': <strong style=\"color:rgb(127,186,0);\">$' + numCommas(d.amount.toString()) + '</strong>' + '</li>';\n            }\n          }\n        });\n        s += '</ul>'\n      }\n\n      if (d.expenses === null) {\n        s += '<br/><h6>' + 'No known expenses information.' + '</h6><br/>';\n      } else {\n        s += '<br/>' + '<h6>' + 'Expenses:' + '</h6><ul>';\n        (d.expenses).forEach(function(d) {\n          if (d.amount === 0 || d.amount === null) {\n            if (d.year === null) {\n              s += '<li><h5>' + 'Unknown Year' + '</h5>' + ': <strong style=\"color:rgb(255,185,0);\">unknown</strong>' + '</li>';\n            } else {\n              s += '<li><h5>' + d.year + '</h5>' + ': <strong style=\"color:rgb(255,185,0);\">unknown</strong>' + '</li>';\n            }\n          } else {\n            if (d.year === null) {\n              s += '<li><h5>' + 'Unknown Year' + '</h5>' + ': <strong style=\"color:rgb(127,186,0);\">$' + numCommas(d.amount.toString()) + '</strong>' + '</li>';\n            } else {\n              s += '<li><h5>' + d.year + '</h5>' + ': <strong style=\"color:rgb(127,186,0);\">$' + numCommas(d.amount.toString()) + '</strong>' + '</li>';\n            }\n          }\n        });\n        s += '</ul>'\n      }\n\n      displayFormA(d);\n\n      return s;\n    }\n\n\n\n    // Form A has the required items + basic items\n    // Also, the user has the options of going directly to form B or C\n    // Form B - click submit button\n    // Form C - click on hyperlink below the submission button\n    d3.selectAll('#edit').on('click', editForm);\n\n    function editForm() {\n      d3.select('#edit-add-info').html('<i class=\" icon-file on-left\"></i>' + 'Reset Form').on('click', editForm);\n\n      node\n        .on('mouseover', null);\n\n      sa = displayFormA();\n\n      // Render the string into HTML\n      d3.select('#info')\n        .html(sa);\n\n      d3.select('datalist#list-name').html(dataListSortedNames);\n      d3.select('input#name').on('keyup', function() {\n        preParseForm(this.value);\n      });\n\n      d3.select('datalist#list-location').html(dataListSortedLocations);\n      d3.select('input#location').on('keyup', function() {\n        preFillLocation(this.value);\n        add_input_locations(0);\n      });\n\n\n      //To split the location string into different fields(city, state and country field)\n      $( \".webform-content\" ).on( \"input\", \".locations\", function() {\n        var string = $(this).val();\n        var splitString = string.split(\",\");\n        $(this).val(splitString[0]);\n        input1 = $(this).siblings(\"#state\");\n        input2 = $(this).siblings(\"#country\");\n\n        //make an ajax call to get the state and country code on select of a location.\n        d3.json(\"/cities\", function(error, cities){\n          var cityNode = cities.nodes;\n          for (var i =0; i <cityNode.length; i++) {\n            var city = cityNode[i];\n            if(city.City_Name == splitString[0]) {\n              if(splitString.length === 2) {\n                input1.val(city.State_Code);\n              }\n              if(splitString.length === 3) {\n                input1.val(city.State_Code);\n                input2.val(city.Country_Code);\n              }\n            }\n          }\n        });\n      });\n\n      d3.select('#key-people-0 input[name=\"kpeople\"]').on('keyup', function() {\n        add_input_kp(0);\n      });\n\n      addDataList('#funding-0 datalist');\n      d3.select('#funding-0 input[name=\"fund\"]').on('keyup', function() {\n        add_input_fund(0);\n        preFillName(this.value, '#funding-0 input');\n      });\n\n      addDataList('#investing-0 datalist');\n      d3.select('#investing-0 input[name=\"invest\"]').on('keyup', function() {\n        add_input_invest(0);\n        preFillName(this.value, '#investing-0 input');\n      });\n\n      addDataList('#fundinggiven-0 datalist');\n      d3.select('#fundinggiven-0 input[name=\"fundgiven\"]').on('keyup', function() {\n        add_input_fund_given(0);\n        preFillName(this.value, '#fundinggiven-0 input');\n      });\n\n      addDataList('#investmentmade-0 datalist');\n      d3.select('#investmentmade-0 input[name=\"investmade\"]').on('keyup', function() {\n        add_input_invest_made(0);\n        preFillName(this.value, '#investmentmade-0 input');\n      });\n\n      addDataList('#data-0 datalist');\n      d3.select('#data-0 input[name=\"data\"]').on('keyup', function() {\n        add_input_data(0);\n        preFillName(this.value, '#data-0 input');\n      });\n\n      d3.select(\"#toFormC\").on('click', function() {\n        displayFormC();\n      });\n\n      d3.selectAll('#submit-A').on('click', function() {\n        d3.select('#name').style(\"border-color\", \"#d9d9d9\");\n        d3.select('#location').style(\"border-color\", \"#d9d9d9\");\n        displayFormB();\n        // if(!_.isEmpty(sb))\n\n      });\n    }\n\n    function processFormA() {\n\n      var formObject = {\n        type: null,\n        categories: null,\n        name: null,\n        nickname: null,\n        location: null,\n        url: null,\n        employees: null,\n        key_people: null,\n        twitter_handle: null,\n        followers: null,\n        relations: null,\n        funding_received: null,\n        investments_received: null,\n        funding_given: null,\n        investments_made: null,\n        collaborations: null,\n        data: null,\n        revenue: null,\n        expenses: null,\n        // grants: null, Not needed, taken care of via the funding_given section.\n        influence: null\n      };\n\n      // Scrape the web form for pertinent information and store into the object data structure.\n      if ($('input[name=\"name\"]').val() === \"\" && $('input[name=\"location\"]').val() === \"\") {\n\n        return {\n          name: null,\n          location: null,\n          errorMessage: \"The entity name and location have not been filled out.\"\n        };\n      } else if ($('input[name=\"name\"]').val() === \"\") {\n\n        return {\n          name: null,\n          errorMessage: \"The entity name has not been filled out.\"\n        };\n      } else if ($('input[name=\"location\"]').val() === \"\") {\n\n        return {\n          location: null,\n          errorMessage: \"The location has not been filled out.\"\n        };\n      } else {\n        // Set the entity type.\n        if ($('input#rb_forpro').is(\":checked\"))\n          formObject.type = \"For-Profit\";\n        else if ($('input#rb_nonpro').is(\":checked\"))\n          formObject.type = \"Non-Profit\";\n        else if ($('input#rb_gov').is(\":checked\"))\n          formObject.type = \"Government\";\n        else\n          formObject.type = \"Individual\";\n\n        // Set the entity name.\n        formObject.name = d3.select(\".webform-content input[name='name']\")[0][0].value;\n\n        // Grab the categories.\n        formObject.categories = [];\n        d3.selectAll('.webform-categories input').filter(function(d) {\n          if (this.checked === true) {\n            switch (this.value) {\n              case 'General':\n                formObject.categories.push(\"General Civic Tech\");\n                break;\n              case 'DataAnalytics':\n                formObject.categories.push(\"Data & Analytics\");\n                break;\n              case 'EconGrowthEdu':\n                formObject.categories.push(\"Jobs & Education\");\n                break;\n              case 'SRCities':\n                formObject.categories.push(\"Smart & Resilient Cities\");\n                break;\n              case 'SocialServ':\n                formObject.categories.push(\"Social Services\");\n                break;\n              case 'GovTech':\n                formObject.categories.push(\"GovTech\");\n                break;\n              default:\n                break;\n            }\n          }\n        });\n        if (formObject.categories.length === 0) {\n          formObject.categories = null;\n        }\n\n        // Obtain the location\n        formObject.location = [];\n        d3.selectAll('.locations').filter(function(d) {\n          if (this.value !== \"\") {\n            var city = this.value;\n            var state = $(this).siblings(\"#state\").val();\n            var country = $(this).siblings(\"#country\").val();\n            if(city && state && country) {\n              formObject.location.push(city + ',' + ' ' +  state + ',' + ' ' + country);\n            } else {\n              formObject.location.push(city + ',' + ' ' +  state);\n            }\n          }\n        });\n        if(formObject.location.length === 0) {\n          formObject.location = null;\n        }\n\n        // Obtain the URL\n        formObject.url = \"\";\n        if (d3.select(\"input[name='website']\")[0][0].value === \"\") {\n          formObject.url = null;\n        } else {\n          formObject.url = d3.select(\"input[name='website']\")[0][0].value;\n        }\n\n        // Obtain the number of employees.\n        formObject.employees = \"\";\n        if (d3.select(\"input[name='employees']\")[0][0].value === \"\") {\n          formObject.employees = null;\n        } else {\n          formObject.employees = parseInt(d3.select(\"input[name='employees']\")[0][0].value);\n        }\n\n        // Obtain the key people (.kpeople)\n        formObject.key_people = [];\n        d3.selectAll('.kpeople').filter(function(d) {\n          if (this.value !== \"\") {\n            formObject.key_people.push(this.value);\n          }\n        });\n        if (formObject.key_people.length === 0) {\n          formObject.key_people = null;\n        }\n\n        // Obtain funding information (Don't forget to add total feature later on...)\n        formObject.funding_received = [];\n        var fund_amount;\n        d3.selectAll('.fund-input .funder').filter(function(d, i) {\n          if (this.value) {\n            if (!d3.selectAll('.fund_amt')[0][i].value) {\n              fund_amount = null;\n              if (!d3.selectAll('.fund_year')[0][i].value) {\n                formObject.funding_received.push({\n                  // ADD id\n                  name: this.value,\n                  amount: fund_amount,\n                  year: null\n                });\n              } else\n                formObject.funding_received.push({\n                  name: this.value,\n                  amount: fund_amount,\n                  year: d3.selectAll('.fund_year')[0][i].value\n                });\n            } else {\n              fund_amount = d3.selectAll('.fund_amt')[0][i].value;\n              if (!d3.selectAll('.fund_year')[0][i].value) {\n                formObject.funding_received.push({\n                  name: this.value,\n                  amount: fund_amount,\n                  year: null\n                });\n              } else\n                formObject.funding_received.push({\n                  name: this.value,\n                  amount: fund_amount,\n                  year: d3.selectAll('.fund_year')[0][i].value\n                });\n            }\n          }\n        });\n        if (formObject.funding_received.length === 0) {\n          formObject.funding_received = null;\n        }\n\n        formObject.funding_given = [];\n        var fund_given_amount;\n        d3.selectAll('.fundgiven-input .fundee').filter(function(d, i) {\n          if (this.value) {\n            if (!d3.selectAll('.fundgiven_amt')[0][i].value) {\n              fund_given_amount = null;\n              if (!d3.selectAll('.fundgiven_year')[0][i].value) {\n                formObject.funding_given.push({\n                  name: this.value,\n                  amount: fund_given_amount,\n                  year: null\n                });\n              } else\n                formObject.funding_given.push({\n                  name: this.value,\n                  amount: fund_given_amount,\n                  year: d3.selectAll('.fundgiven_year')[0][i].value\n                });\n            } else {\n              fund_given_amount = d3.selectAll('.fundgiven_amt')[0][i].value;\n              if (!d3.selectAll('.fundgiven_year')[0][i].value) {\n                formObject.funding_given.push({\n                  name: this.value,\n                  amount: fund_given_amount,\n                  year: null\n                });\n              } else\n                formObject.funding_given.push({\n                  name: this.value,\n                  amount: fund_given_amount,\n                  year: d3.selectAll('.fundgiven_year')[0][i].value\n                });\n            }\n          }\n        });\n        if (formObject.funding_given.length === 0) {\n          formObject.funding_given = null;\n        }\n\n        // Obtain investment information (Don't forget to add total feature later on...)\n        formObject.investments_received = [];\n        var investment_amount;\n        d3.selectAll('.invest-input .investor').filter(function(d, i) {\n          if (this.value) {\n            if (!d3.selectAll('.invest_amt')[0][i].value) {\n              investment_amount = null;\n              if (!d3.selectAll('.invest_year')[0][i].value) {\n                formObject.investments_received.push({\n                  name: this.value,\n                  amount: investment_amount,\n                  year: null\n                });\n              } else\n                formObject.investments_received.push({\n                  name: this.value,\n                  amount: investment_amount,\n                  year: d3.selectAll('.invest_year')[0][i].value\n                });\n            } else {\n              investment_amount = d3.selectAll('.invest_amt')[0][i].value;\n              if (!d3.selectAll('.invest_year')[0][i].value) {\n                formObject.investments_received.push({\n                  name: this.value,\n                  amount: investment_amount,\n                  year: null\n                });\n              } else\n                formObject.investments_received.push({\n                  name: this.value,\n                  amount: investment_amount,\n                  year: d3.selectAll('.invest_year')[0][i].value\n                });\n            }\n          }\n        });\n        if (formObject.investments_received.length === 0) {\n          formObject.investments_received = null;\n        }\n\n        formObject.investments_made = [];\n        var investment_made_amount;\n        d3.selectAll('.investmade-input .investee').filter(function(d, i) {\n          if (this.value) {\n            if (!d3.selectAll('.investmade_amt')[0][i].value) {\n              investment_made_amount = null;\n              if (!d3.selectAll('.investmade_year')[0][i].value) {\n                formObject.investments_made.push({\n                  name: this.value,\n                  amount: investment_made_amount,\n                  year: null\n                });\n              } else\n                formObject.investments_made.push({\n                  name: this.value,\n                  amount: investment_made_amount,\n                  year: d3.selectAll('.investmade_year')[0][i].value\n                });\n            } else {\n              investment_made_amount = d3.selectAll('.investmade_amt')[0][i].value;\n              if (!d3.selectAll('.investmade_year')[0][i].value) {\n                formObject.investments_made.push({\n                  name: this.value,\n                  amount: investment_made_amount,\n                  year: null\n                });\n              } else\n                formObject.investments_made.push({\n                  name: this.value,\n                  amount: investment_made_amount,\n                  year: d3.selectAll('.investmade_year')[0][i].value\n                });\n            }\n          }\n        });\n        if (formObject.investments_made.length === 0) {\n          formObject.investments_made = null;\n        }\n\n        // Obtain data\n        formObject.data = [];\n        d3.selectAll('.data-entity').filter(function(d, i) {\n          if (this.value !== \"\")\n            formObject.data.push(this.value);\n        });\n        if (formObject.data.length === 0) {\n          formObject.data = null;\n        }\n      }\n\n      return formObject;\n    }\n\n    function processFormB(formObject) {\n      //var formObj = {type:null,categories:null,name:null,nickname:null,location:null,url:null,employees:null,people:null,twitterH:null,followers:null,data:null,relatedto:null,poruc:null,funding_connections:null,yearFR:null,investmentR:null,yearIR:null,rande:null,randeY:null,grantsG:null,yearG:null,golr:null};\n\n      // Set the entity name.\n      formObject.nickname = d3.select(\".webform-content input[name='nickname']\")[0][0].value;\n      if (!formObject.nickname) {\n        formObject.nickname = formObject.name;\n      }\n\n      formObject.twitter_handle = d3.select(\".webform-content input[name='twitterhandle']\")[0][0].value;\n      if (!formObject.twitter_handle) {\n        formObject.twitter_handle = null;\n      }\n\n      // Set the entity type.\n      if ($('.webform-influence input#rb_local').is(\":checked\"))\n        formObject.influence = \"local\";\n      else\n        formObject.influence = \"global\";\n\n      // Obtain collaborations\n      formObject.collaborations = [];\n      d3.selectAll('.collaborator').filter(function(d) {\n        if (this.value) {\n          formObject.collaborations.push(this.value);\n        }\n      });\n      if (formObject.collaborations.length === 0) {\n        formObject.collaborations = null;\n      }\n\n      // Obtain funding information (Don't forget to add total feature later on...)\n      formObject.revenue = [];\n      var revenue_year;\n      d3.selectAll('.revenue-input .revenue_amt').filter(function(d, i) {\n        if (this.value) {\n          revenue_year = d3.selectAll('.revenue-input .revenue_year')[0][i].value;\n          if (revenue_year)\n            formObject.revenue.push({\n              amount: this.value,\n              year: revenue_year\n            });\n          else\n            formObject.revenue.push({\n              amount: this.value,\n              year: null\n            });\n        }\n      });\n      if (formObject.revenue.length === 0) {\n        formObject.revenue = null;\n      }\n\n      formObject.expenses = [];\n      var expense_year;\n      d3.selectAll('.expense-input .expense_amt').filter(function(d, i) {\n        if (this.value) {\n          expense_year = d3.selectAll('.expense-input .expense_year')[0][i].value;\n          if (expense_year)\n            formObject.expenses.push({\n              amount: this.value,\n              year: expense_year\n            });\n          else\n            formObject.expenses.push({\n              amount: this.value,\n              year: null\n            });\n        }\n      });\n      if (formObject.expenses.length === 0) {\n        formObject.expenses = null;\n      }\n\n\n      return formObject;\n\n    }\n\n    // Form B has the required items, which are already filled out, and the advanced items.\n    // This form takes the user directly to form C if the user submits the data via clicking the submit button.\n    function displayFormB() {\n      // Now we have a perfectly structured JSON object that contains the information given by the user and inputted into the webform.\n      // Send this object as a parameter to form B, and render form B accordingly.\n\n      var formObject = processFormA();\n\n      if (formObject.location && formObject.name) {\n        // Reinitialize Form A items.\n\n        counterKey = 0;\n        counterK = 0;\n\n        counterFund = 0;\n        counterF = 0;\n\n        // Render form B.\n\n        s = '<h2 id=\"webform-head\">Information</h2><hr/><div class=\"webform-content\"><div class=\"input-control text\" data-role=\"input-control\"><input type=\"text\" name=\"name\" id=\"name\" placeholder=\"Name of Entity\"/></div><h3 class=\"form-header\">Entity Type</h3><div class=\"webform-entities\"><div data-role=\"input-control\" class=\"input-control radio default-style webform\"><label><input id=\"rb_forpro\" type=\"radio\" name=\"entitytype\" value=\"For-Profit\" checked=\"checked\"/><span class=\"check\"></span><h4 class=\"webform-labels\">For-Profit</h4></label></div><div data-role=\"input-control\" class=\"input-control radio default-style webform\"><label><input id=\"rb_nonpro\" type=\"radio\" name=\"entitytype\" value=\"Non-Profit\"/><span class=\"check\"></span><h4 class=\"webform-labels\">Non-Profit</h4></label></div><div data-role=\"input-control\" class=\"input-control radio default-style webform\"><label><input id=\"rb_gov\" type=\"radio\" name=\"entitytype\" value=\"Government\"/><span class=\"check\"></span><h4 class=\"webform-labels\">Government</h4></label></div><div data-role=\"input-control\" class=\"input-control radio default-style webform\"><label><input id=\"rb_individs\" type=\"radio\" name=\"entitytype\" value=\"Individual\"/><span class=\"check\"></span><h4 class=\"webform-labels\">Individual</h4></label></div></div><div id=\"location-0\" class=\"input-control text\" data-role=\"input-control\"><input type=\"text\" name=\"location\" class=\"locations\" id=\"location\" placeholder=\"City\" /></div>';\n        // d3.select(\"#expense\").on(\"keyup\", function() {\n        //     add_input_exp(counterE);\n        // });\n        //\n        // Time to render the nickname, twitter handle fields\n        // Also circle of influence, collaboration, revenue, revenue and grant...\n        s += '<hr/><div class = \"input-control text\" data-role=\"input-control\"><input type=\"text\" name=\"nickname\" id=\"nickname\" placeholder=\"Nickname/Abbr.\"/></div><div class = \"input-control text\" data-role=\"input-control\"><input type=\"text\" name=\"twitterhandle\" id=\"twitterhandle\" placeholder=\"Twitter Handle\"/></div><h3 class=\"form-header\" style=\"display:inline-block;\">Circle of Influence: </h3><div class=\"webform-influence\"><div data-role=\"input-control\" class=\"input-control radio default-style webform\"><label><input id=\"rb_local\" type=\"radio\" name=\"influence-type\" value=\"Local Influence\" checked=\"checked\"/><span class=\"check\"></span><h4 class=\"webform-labels\">Local Influence</h4></label></div><div data-role=\"input-control\" class=\"input-control radio default-style webform\"><label><input id=\"rb_global\" type=\"radio\" name=\"influence-type\" value=\"Global Influence\" checked=\"checked\"/><span class=\"check\"></span><h4 class=\"webform-labels\">Global Influence</h4></label></div></div><h3 class=\"form-header\">Collaboration</h3><div id=\"collaboration-0\" class=\"input-control text\" data-role=\"input-control\"><input type=\"text\" name=\"collaboration\" class=\"collaborator\" placeholder=\"Collaborator\" list=\"collaborator-list\"/><datalist id=\"collaborator-list\"></datalist></div><h3 class=\"form-header\">Revenue</h3><div id=\"revenue-0\"><div class=\"revenue-input input-control text\" data-role=\"input-control\"><input type=\"text\" name=\"revenue_amt\" class=\"revenue_amt\" placeholder=\"Amount\" style=\"display:inline-block; width: 57%;\"/><input type=\"text\" name=\"revenue_year\" class=\"revenue_year\" placeholder=\"Year\" style=\"display:inline-block; width: 20%;\"/></div></div><h3 class=\"form-header\">Expenses</h3><div id=\"expense-0\"><div class=\"expense-input input-control text\" data-role=\"input-control\"><input type=\"text\" name=\"expense_amt\" class=\"expense_amt\" placeholder=\"Amount\" style=\"display:inline-block; width: 57%;\"/><input type=\"text\" name=\"expense_year\" class=\"expense_year\" placeholder=\"Year\" style=\"display:inline-block; width: 20%;\"/></div></div><button type=\"button\" id=\"submit-B\" href=\"javascript: check_empty()\">Submit</button></div>';\n\n        // <h3 class=\"form-header\">Grants</h3>\\\n        // <div id=\"grant-0\">\\\n        // <div class=\"grant-input input-control text\" data-role=\"input-control\">\\\n        // <input type=\"text\" name=\"grant_amt\" class=\"grant_amt\" placeholder=\"Amount\" style=\"display:inline-block; width: 57%;\"/>\\\n        // <input type=\"text\" name=\"grant_year\" class=\"grant_year\" placeholder=\"Year\" style=\"display:inline-block; width: 20%;\"/>\\\n        // </div>\\\n        // </div>\\\n\n        d3.select('#info')\n          .html(s);\n\n        addDataList('#collaboration-0 datalist');\n\n\n        // Time to prefill the form...\n        d3.selectAll('#name').text(function(d) {\n          this.value = formObject.name;\n        }).attr(\"disabled\", true);\n\n        if( formObject.location !== null) {\n          var location = formObject.location;\n          for(var i=0; i<location.length; i++) {\n            if(i === 0) {\n              d3.select('#location-' + i + ' input[name=\"location\"]').on('keyup', null);\n              d3.select('#location-' + i + ' input[name=\"location\"]').text(function(e) {\n                this.value = location[i];\n                this.disabled = true;\n              });\n            } else {\n              $(\"#location-\" + (i-1)).after('<div id=\"location-' + i + '\" class=\"input-control text\" data-role=\"input-control\"><input type=\"text\" name=\"location\" class=\"locations\" id=\"location\" placeholder=\"City\" /></div>');\n              d3.select('#location-' + i + ' input[name=\"location\"]').on('keyup', null);\n              d3.select('#location-' + i + ' input[name=\"location\"]').text(function(e) {\n                this.value = location[i];\n                this.disabled = true;\n              });\n            }\n          }\n\n          d3.select('#location-' + location.length + ' input[name=\"location\"]').on('keyup', function() {\n            add_input_loc(location.length);\n          }).style(\"margin-top\", \"10px\");\n        }\n\n        d3.selectAll('input[name=\"entitytype\"]').filter(function(d, i) {\n          if (this.value === formObject.type)\n            this.checked = true;\n          else\n            this.checked = false;\n          this.disabled = true;\n        });\n\n        // Add action listeners\n        d3.selectAll('input[name=\"collaboration\"]').on('keyup', function() {\n          add_input_collab(0);\n          preFillName(this.value, '#collaboration-0 input');\n        });\n        d3.selectAll('input[name=\"revenue_amt\"]').on('keyup', function() {\n          add_input_rev(0);\n        });\n        d3.selectAll('input[name=\"expense_amt\"]').on('keyup', function() {\n          add_input_exp(0);\n        });\n        // d3.selectAll('input[name=\"grant_amt\"]').on('keyup', function() {\n        //   add_input_grant(0);\n        // });\n\n        d3.selectAll('#submit-B').on('click', function() {\n          displayFormCSendJSON(formObject);\n          // if(!_.isEmpty(sb))\n        });\n      } else { //  Error checking the form...\n        if (!formObject.name && !formObject.location) {\n          d3.select('#name').style(\"border-color\", \"#e51400\");\n          d3.select('#location').style(\"border-color\", \"#e51400\");\n        } else {\n          if (!formObject.name)\n            d3.select('#name').style(\"border-color\", \"#e51400\");\n          else\n            d3.select('#location').style(\"border-color\", \"#e51400\");\n        }\n      }\n\n    }\n\n    function addDataList(dataListSelector) {\n      d3.select(dataListSelector).html(dataListSortedNames);\n    }\n\n    function preFillName(input, inputSelector) {\n      if (input.toLowerCase() in entitiesHash) {\n        d3.selectAll(inputSelector).text(function(d) {\n          this.value = entitiesHash[input].name;\n          // this.data('id') = entitiesHash[input].id;\n        });\n      }\n    }\n\n    function preParseForm(input) {\n      input = input.toLowerCase();\n      if (input in entitiesHash) {\n        editForm();\n        preFillFormA(entitiesHash[input]);\n      }\n    }\n\n    function preFillLocation(input) {\n      if (input.toLowerCase() in locationsHash) {\n        d3.selectAll('#location').text(function(d) {\n          this.value = locationsHash[input][0].location;\n        });\n      }\n    }\n\n    function add_input_locations(counterJ) {\n      if ($('#location-' + counterJ + ' input[name=\"location\"]').val() !== \"\") {\n        d3.select('#location-' + counterJ + ' input[name=\"location\"]').on('keyup', function (){\n          preFillLocation(this.value);\n        });\n        counterJ++;\n\n        $(\"#location-\" + (counterJ - 1)).after('<div id=\"location-' + counterJ + '\" class=\"input-control text\" data-role=\"input-control\"><input type=\"text\" name=\"location\" id=\"location\" class=\"locations\" placeholder=\"City\" list=\"list-location\" style=\"width:50%;\"/><input type=\"text\" id=\"state\" placeholder=\"State\" style=\"width:22%;\"/><input type=\"text\" id=\"country\" placeholder=\"Country\" style=\"width:28%;\"/></div>');\n        d3.select(\"#location-\" + counterJ +  \" input[name='location']\").on(\"keyup\", function() {\n          add_input_locations(counterJ);\n        });\n      }\n    }\n\n    function add_input_loc(counterU) {\n      if ($('#location-' + counterU + ' input[name=\"location\"]').val() !== \"\") {\n        d3.select('#location-' + counterU + ' input[name=\"location\"]').on('keyup', null);\n        counterU++;\n\n        $(\"#location-\" + (counterU - 1)).after('<div id=\"location-' + counterU + '\" class=\"input-control text\" data-role=\"input-control\"><input type=\"text\" name=\"location\" class=\"locations\" id=\"location\" placeholder=\"City\" /></div>');\n        d3.select(\"#location-\" + counterU +  \" input[name='location']\").on(\"keyup\", function() {\n          add_input_loc(counterU);\n        });\n      }\n    }\n\n    function add_input_kp(counterK) {\n      if ($('#key-people-' + counterK + ' input[name=\"kpeople\"]').val() !== \"\") {\n        d3.select('#key-people-' + counterK + ' input[name=\"kpeople\"]').on('keyup', null);\n        counterK++; // counter -> 2\n\n\n        $(\"#key-people-\" + (counterK - 1)).after('<div id=\"key-people-' + counterK + '\" class=\"input-control text\" data-role=\"input-control\"><input type=\"text\" name=\"kpeople\" class=\"kpeople\" placeholder=\"Key Person\\'s Name\"/></div>');\n        d3.select(\"#key-people-\" + counterK + \" input[name='kpeople']\").on(\"keyup\", function() {\n          add_input_kp(counterK);\n        });\n      }\n    }\n\n    function add_input_fund(counterF) {\n      if ($('#funding-' + counterF + ' input[name=\"fund\"]').val() !== \"\") {\n        d3.select('#funding-' + counterF + ' input[name=\"fund\"]').on('keyup', function() {\n          preFillName(this.value, '#funding-' + (counterF - 1) + ' input[name=\"fund\"]');\n        });\n        counterF++; // counter -> 2\n\n\n        $(\"#funding-\" + (counterF - 1)).after('<div id=\"funding-' + counterF + '\"><div class=\"fund-input input-control text\" data-role=\"input-control\"><input type=\"text\" name=\"fund\" class=\"funder\" placeholder=\"Funder\" style=\"display:inline-block; width:50%;\" list=\"funding-received-list\"/><datalist id=\"funding-received-list\"></datalist><input type=\"text\" name=\"fund_amt\" class=\"fund_amt\" placeholder=\"Amount\" style=\"display:inline-block; width: 27%;\"/><input type=\"text\" name=\"fund_year\" class=\"fund_year\" placeholder=\"Year\" style=\"display:inline-block; width: 20%;\"/></div></div>');\n        addDataList('#funding-' + counterF + ' datalist');\n        d3.select(\"#funding-\" + counterF + \" input[name='fund']\").on(\"keyup\", function() {\n          add_input_fund(counterF);\n        });\n      }\n    }\n\n    function add_input_invest(counterI) {\n      if ($('#investing-' + counterI + ' input[name=\"invest\"]').val() !== \"\") {\n        d3.select('#investing-' + counterI + ' input[name=\"invest\"]').on('keyup', function() {\n          preFillName(this.value, '#investing-' + (counterI - 1) + ' input[name=\"invest\"]');\n        });\n        counterI++; // counter -> 2\n\n\n        $(\"#investing-\" + (counterI - 1)).after('<div id=\"investing-' + counterI + '\"><div class=\"invest-input input-control text\" data-role=\"input-control\"><input type=\"text\" name=\"invest\" class=\"investor\" placeholder=\"Investor\" style=\"display:inline-block; width:50%;\" list=\"investment-received-list\"/><datalist id=\"investment-received-list\"></datalist><input type=\"text\" name=\"invest_amt\" class=\"invest_amt\" placeholder=\"Amount\" style=\"display:inline-block; width: 27%;\"/><input type=\"text\" name=\"invest_year\" class=\"invest_year\" placeholder=\"Year\" style=\"display:inline-block; width: 20%;\"/></div></div>');\n        addDataList('#investing-' + counterI + ' datalist');\n        d3.select(\"#investing-\" + counterI + \" input[name='invest']\").on(\"keyup\", function() {\n          add_input_invest(counterI);\n        });\n      }\n    }\n\n    function add_input_fund_given(counterFG) {\n      if ($('#fundinggiven-' + counterFG + ' input[name=\"fundgiven\"]').val() !== \"\") {\n        d3.select('#fundinggiven-' + counterFG + ' input[name=\"fundgiven\"]').on('keyup', function() {\n          preFillName(this.value, '#fundinggiven-' + (counterFG - 1) + ' input[name=\"fundgiven\"]');\n        });\n        counterFG++; // counter -> 2\n\n\n        $(\"#fundinggiven-\" + (counterFG - 1)).after('<div id=\"fundinggiven-' + counterFG + '\"><div class=\"fundgiven-input input-control text\" data-role=\"input-control\"><input type=\"text\" name=\"fundgiven\" class=\"fundee\" placeholder=\"Fundee\" style=\"display:inline-block; width:50%;\" list=\"funding-given-list\"/><datalist id=\"funding-given-list\"></datalist><input type=\"text\" name=\"fundgiven_amt\" class=\"fundgiven_amt\" placeholder=\"Amount\" style=\"display:inline-block; width: 27%;\"/><input type=\"text\" name=\"fundgiven_year\" class=\"fundgiven_year\" placeholder=\"Year\" style=\"display:inline-block; width: 20%;\"/></div></div>');\n        addDataList('#fundinggiven-' + counterFG + ' datalist');\n        d3.select(\"#fundinggiven-\" + counterFG + \" input[name='fundgiven']\").on(\"keyup\", function() {\n          add_input_fund_given(counterFG);\n        });\n      }\n    }\n\n    function add_input_invest_made(counterIM) {\n      if ($('#investmentmade-' + counterIM + ' input[name=\"investmade\"]').val() !== \"\") {\n        d3.select('#investmentmade-' + counterIM + ' input[name=\"investmade\"]').on('keyup', function() {\n          preFillName(this.value, '#investmentmade-' + (counterIM - 1) + ' input[name=\"investmade\"]');\n        });\n        counterIM++; // counter -> 2\n\n\n        $(\"#investmentmade-\" + (counterIM - 1)).after('<div id=\"investmentmade-' + counterIM + '\"><div class=\"investmade-input input-control text\" data-role=\"input-control\"><input type=\"text\" name=\"investmade\" class=\"investee\" placeholder=\"Investee\" style=\"display:inline-block; width:50%;\" list=\"investment-made-list\"/><datalist id=\"investment-made-list\"></datalist><input type=\"text\" name=\"investmade_amt\" class=\"investmade_amt\" placeholder=\"Amount\" style=\"display:inline-block; width: 27%;\"/><input type=\"text\" name=\"investmade_year\" class=\"investmade_year\" placeholder=\"Year\" style=\"display:inline-block; width: 20%;\"/></div></div>');\n        addDataList('#investmentmade-' + counterIM + ' datalist');\n        d3.select(\"#investmentmade-\" + counterIM + \" input[name='investmade']\").on(\"keyup\", function() {\n          add_input_invest_made(counterIM);\n        });\n      }\n    }\n\n    function add_input_data(counterD) {\n      if ($('#data-' + counterD + ' input[name=\"data\"]').val() !== \"\") {\n        d3.select('#data-' + counterD + ' input[name=\"data\"]').on('keyup', function() {\n          preFillName(this.value, '#data-' + (counterD - 1) + ' input[name=\"data\"]');\n        });\n        counterD++; // counter -> 2\n\n\n        $(\"#data-\" + (counterD - 1)).after('<div id=\"data-' + counterD + '\" class=\"input-control text\" data-role=\"input-control\"><input type=\"text\" name=\"data\" class=\"data-entity\" placeholder=\"Data Resource\" list=\"data-received-list\"/><datalist id=\"data-received-list\"></datalist></div>');\n        addDataList('#data-' + counterD + ' datalist');\n        d3.select(\"#data-\" + counterD + \" input[name='data']\").on(\"keyup\", function() {\n          add_input_data(counterD);\n        });\n      }\n    }\n\n    function add_input_collab(counterC) {\n      if ($('#collaboration-' + counterC + ' input[name=\"collaboration\"]').val() !== \"\") {\n        d3.select('#collaboration-' + counterC + ' input[name=\"collaboration\"]').on('keyup', function() {\n          preFillName(this.value, '#collaboration-' + (counterC - 1) + ' input[name=\"collaboration\"]');\n        });\n        counterC++; // counter -> 2\n\n\n        $(\"#collaboration-\" + (counterC - 1)).after('<div id=\"collaboration-' + counterC + '\" class=\"input-control text\" data-role=\"input-control\"><input type=\"text\" name=\"collaboration\" class=\"collaborator\" placeholder=\"Collaborator\" list=\"collaborator-list\"/><datalist id=\"collaborator-list\"></datalist></div>');\n        addDataList('#collaboration-' + counterC + ' datalist');\n        d3.select(\"#collaboration-\" + counterC + \" input[name='collaboration']\").on(\"keyup\", function() {\n          add_input_collab(counterC);\n\n        });\n      }\n    }\n\n    function add_input_rev(counterR) {\n      if ($('#revenue-' + counterR + ' input[name=\"revenue_amt\"]').val() !== \"\") {\n        d3.select('#revenue-' + counterR + ' input[name=\"revenue_amt\"]').on('keyup', null);\n        counterR++; // counter -> 2\n\n\n        $(\"#revenue-\" + (counterR - 1)).after('<div id=\"revenue-' + counterR + '\"><div class=\"revenue-input input-control text\" data-role=\"input-control\"><input type=\"text\" name=\"revenue_amt\" class=\"revenue_amt\" placeholder=\"Amount\" style=\"display:inline-block; width: 57%;\"/><input type=\"text\" name=\"revenue_year\" class=\"revenue_year\" placeholder=\"Year\" style=\"display:inline-block; width: 20%;\"/></div></div>');\n        d3.select(\"#revenue-\" + counterR + \" input[name=revenue_amt]\").on(\"keyup\", function() {\n          add_input_rev(counterR);\n        });\n      }\n    }\n\n    function add_input_exp(counterE) {\n      if ($('#expense-' + counterE + ' input[name=\"expense_amt\"]').val() !== \"\") {\n        d3.select('#expense-' + counterE + ' input[name=\"expense_amt\"]').on('keyup', null);\n        counterE++; // counter -> 2\n\n\n        $(\"#expense-\" + (counterE - 1)).after('<div id=\"expense-' + counterE + '\"><div class=\"expense-input input-control text\" data-role=\"input-control\"><input type=\"text\" name=\"expense_amt\" class=\"expense_amt\" placeholder=\"Amount\" style=\"display:inline-block; width: 57%;\"/><input type=\"text\" name=\"expense_year\" class=\"expense_year\" placeholder=\"Year\" style=\"display:inline-block; width: 20%;\"/></div></div>');\n        d3.select(\"#expense-\" + counterE + \" input[name=expense_amt]\").on(\"keyup\", function() {\n          add_input_exp(counterE);\n        });\n      }\n    }\n\n    function displayFormA() {\n      // Test if jQuery works within d3...\n      //var elementCount = $( \"*\" ).css( \"border\", \"3px solid red\" ).length;\n      s = '<h2 id=\"webform-head\">Information</h2><hr/><div class=\"webform-content\"><div class=\"input-control text\" data-role=\"input-control\"><input type=\"text\" name=\"name\" id=\"name\" placeholder=\"Name of Entity\" list=\"list-name\"/><datalist id=\"list-name\"></datalist></div><h3 class=\"form-header\">What type of entity?</h3><div class=\"webform-entities\"><div data-role=\"input-control\" class=\"input-control radio default-style webform\"><label><input id=\"rb_forpro\" type=\"radio\" name=\"entitytype\" value=\"For-Profit\" checked=\"checked\"/><span class=\"check\"></span><h4 class=\"webform-labels\">For-Profit</h4></label></div><div data-role=\"input-control\" class=\"input-control radio default-style webform\"><label><input id=\"rb_nonpro\" type=\"radio\" name=\"entitytype\" value=\"Non-Profit\"/><span class=\"check\"></span><h4 class=\"webform-labels\">Non-Profit</h4></label></div><div data-role=\"input-control\" class=\"input-control radio default-style webform\"><label><input id=\"rb_gov\" type=\"radio\" name=\"entitytype\" value=\"Government\"/><span class=\"check\"></span><h4 class=\"webform-labels\">Government</h4></label></div><div data-role=\"input-control\" class=\"input-control radio default-style webform\"><label><input id=\"rb_individs\" type=\"radio\" name=\"entitytype\" value=\"Individual\"/><span class=\"check\"></span><h4 class=\"webform-labels\">Individual</h4></label></div></div><h3 class=\"form-header\">What kind of work do they do?</h3><h4>(Select All That Apply)</h4><div class=\"webform-categories\"><div data-role=\"input-control\" class=\"input-control checkbox webform\"><label><input id=\"cb_gen\" type=\"checkbox\" name=\"gen\" data-show=\"general\" value=\"General\"/><span class=\"check\"></span><h4 class=\"webform-labels\">General Civic Tech</h4></label></div><div data-role=\"input-control\" class=\"input-control checkbox webform\"><label><input id=\"cb_datat\" type=\"checkbox\" name=\"datat\" data-show=\"datalytics\" value=\"DataAnalytics\"/><span class=\"check\"></span><h4 class=\"webform-labels\">Data & Analytics</h4></label></div><div data-role=\"input-control\" class=\"input-control checkbox webform\"><label><input id=\"cb_eced\" type=\"checkbox\" name=\"eced\" data-show=\"econedu\" value=\"EconGrowthEdu\"/><span class=\"check\"></span><h4 class=\"webform-labels\">Jobs & Education</h4></label></div><div data-role=\"input-control\" class=\"input-control checkbox webform\"><label><input id=\"cb_src\" type=\"checkbox\" name=\"srcities\" data-show=\"srcities\" value=\"SRCities\"/><span class=\"check\"></span><h4 class=\"webform-labels\">Smart & Resilient Cities</h4></label></div><div data-role=\"input-control\" class=\"input-control checkbox webform\"><label><input id=\"cb_socs\" type=\"checkbox\" name=\"socserv\" data-show=\"socserv\" value=\"SocialServ\"/><span class=\"check\"></span><h4 class=\"webform-labels\">Social Services</h4></label></div><div data-role=\"input-control\" class=\"input-control checkbox webform\"><label><input id=\"cb_govt\" type=\"checkbox\" name=\"govtech\" data-show=\"govtech\" value=\"GovTech\"/><span class=\"check\"></span><h4 class=\"webform-labels\">GovTech</h4></label></div></div><div id=\"location-0\"><div class=\"input-control text\" data-role=\"input-control\"><input type=\"text\" name=\"location\" id=\"location\" class=\"locations\" placeholder=\"City\" list=\"list-location\" style=\"width:50%;\"/><input type=\"text\" id=\"state\" placeholder=\"State\" style=\"width:22%;\"/><input type=\"text\" id=\"country\" placeholder=\"Country\" style=\"width:28%;\"/></div></div><datalist id=\"list-location\"></datalist></div><div class=\"input-control text\" data-role=\"input-control\"><input type=\"text\" name=\"website\" id=\"website\" placeholder=\"Website\"/></div><h3 class=\"form-header\" style=\"display:inline-block;\">Number of Employees</h3><div class=\"input-control text\" data-role=\"input-control\" style=\"width:27% !important; display:inline-block; float:right; margin-top: 2%;\"><input type=\"text\" name=\"employees\" id=\"employee\" maxlength=\"6\" style=\"width:100% !important;\"/></div><h3 class=\"form-header\">Key People?</h3><div id=\"key-people-0\" class=\"input-control text\" data-role=\"input-control\"><input type=\"text\" name=\"kpeople\" class=\"kpeople\" placeholder=\"Key Person\\'s Name\"/></div><h3 class=\"form-header\">Who funds them via grants?</h3><div id=\"funding-0\"><div class=\"fund-input input-control text\" data-role=\"input-control\"><input type=\"text\" name=\"fund\" class=\"funder\" placeholder=\"Funder\" style=\"display:inline-block; width:50%;\" list=\"funding-received-list\"/><datalist id=\"funding-received-list\"></datalist><input type=\"text\" name=\"fund_amt\" class=\"fund_amt\" placeholder=\"Amount\" style=\"display:inline-block; width: 27%;\"/><input type=\"text\" name=\"fund_year\" class=\"fund_year\" placeholder=\"Year\" style=\"display:inline-block; width: 20%;\"/></div></div><h3 class=\"form-header\">Who invests in them via equity stakes (stock)?</h3><div id=\"investing-0\"><div class=\"invest-input input-control text\" data-role=\"input-control\"><input type=\"text\" name=\"invest\" class=\"investor\" placeholder=\"Investor\" style=\"display:inline-block; width:50%;\" list=\"investment-received-list\"/><datalist id=\"investment-received-list\"></datalist><input type=\"text\" name=\"invest_amt\" class=\"invest_amt\" placeholder=\"Amount\" style=\"display:inline-block; width: 27%;\"/><input type=\"text\" name=\"invest_year\" class=\"invest_year\" placeholder=\"Year\" style=\"display:inline-block; width: 20%;\"/></div></div><h3 class=\"form-header\">Who do they fund via grants?</h3><div id=\"fundinggiven-0\"><div class=\"fundgiven-input input-control text\" data-role=\"input-control\"><input type=\"text\" name=\"fundgiven\" class=\"fundee\" placeholder=\"Fundee\" style=\"display:inline-block; width:50%;\" list=\"funding-given-list\"/><datalist id=\"funding-given-list\"></datalist><input type=\"text\" name=\"fundgiven_amt\" class=\"fundgiven_amt\" placeholder=\"Amount\" style=\"display:inline-block; width: 27%;\"/><input type=\"text\" name=\"fundgiven_year\" class=\"fundgiven_year\" placeholder=\"Year\" style=\"display:inline-block; width: 20%;\"/></div></div><h3 class=\"form-header\">Who do they invest in via equity stakes (stock)?</h3><div id=\"investmentmade-0\"><div class=\"investmade-input input-control text\" data-role=\"input-control\"><input type=\"text\" name=\"investmade\" class=\"investee\" placeholder=\"Investee\" style=\"display:inline-block; width:50%;\" list=\"investment-made-list\"/><datalist id=\"investment-made-list\"></datalist><input type=\"text\" name=\"investmade_amt\" class=\"investmade_amt\" placeholder=\"Amount\" style=\"display:inline-block; width: 27%;\"/><input type=\"text\" name=\"investmade_year\" class=\"investmade_year\" placeholder=\"Year\" style=\"display:inline-block; width: 20%;\"/></div></div><h3 class=\"form-header\">Who provides them with data?</h3><div id=\"data-0\" class=\"input-control text\" data-role=\"input-control\"><input type=\"text\" name=\"data\" class=\"data-entity\" placeholder=\"Data Resource\" list=\"data-received-list\"/><datalist id=\"data-received-list\"></datalist></div><div id=\"nextPhase\"><button type=\"button\" id=\"submit-A\" href=\"javascript: check_empty()\">Next</button></div></div><hr/><div class=\"webform-footer\"><span id=\"\">Some entities lack adequate information. Would you like to help?</span><br/><span id=\"toFormC\">Click here!</span></div>';\n\n      return s;\n\n    }\n\n    function iterateThroughObj(obj) {\n\n      var objValue = _.object(_.map(obj, function(value, key) {\n        return [key, value];\n      }));\n\n      return objValue;\n    }\n\n    function determineNullFields() {\n      var nullFieldCount = 0;\n      var nullFieldArr = [];\n\n      //  We know which nodes have how null fields...\n      filteredNodes.forEach(function(d) {\n        var objValue = _.object(_.map(d, function(value, key) {\n          if (value === null)\n            nullFieldCount++;\n          return [key, value];\n        }));\n        // Individuals do not have employees, people, rande, randeY\n        // Not a fair comparison of null fields.\n        if (d.type === 'Individual')\n          nullFieldCount -= 4;\n\n        nullFieldArr.push({\n          name: d.name,\n          nullFields: nullFieldCount\n        });\n        nullFieldCount = 0;\n      });\n\n      //  Let's determine the nodes with the most null fields.\n      var maxNullObj = _.max(nullFieldArr, function(d) {\n        return d.nullFields\n      });\n\n      var potentialSuggestions = [];\n\n      nullFieldArr.forEach(function(d) {\n        if (d.nullFields <= maxNullObj.nullFields && d.nullFields >= maxNullObj.nullFields - 7) {\n          var nodeObj = _.find(filteredNodes, function(e) {\n            return d.name === e.name;\n          });\n          potentialSuggestions.push(nodeObj);\n          // countFive++;\n        }\n      });\n\n      var fiveSuggestions = [];\n\n      while (fiveSuggestions.length < 5) {\n        var indexValue = Math.floor(Math.random() * potentialSuggestions.length);\n\n        if (fiveSuggestions.indexOf(potentialSuggestions[indexValue]) !== -1) {\n          continue;\n        } else {\n          fiveSuggestions.push(potentialSuggestions[indexValue]);\n        }\n      }\n\n      return fiveSuggestions;\n    }\n\n    function displayFormCSendJSON(obj) {\n      var formObj = processFormB(obj);\n\n      displayFormC();\n\n      console.log(formObj);\n      console.log($.param(formObj));\n\n      $.ajax({\n        type: 'POST',\n        data: $.param(formObj),\n        url: '/database/save',\n        crossDomain: true\n      }).done(function(returnData) {\n\n      });\n\n    }\n\n    function displayFormC() {\n      var s = \"\";\n      s += '<h2 id=\"webform-head\">Information</h2><hr/><div style=\"text-align:center;\" class=\"webform-content\"><p>Thank you for contributing to Civic Graph! Refresh the page to view your changes (it might take a few moments).</p><p>Would you like to add or edit more info?</p>';\n\n      s += '<ul id=\"suggestions\">';\n\n      var suggestions = determineNullFields();\n\n\n      suggestions.forEach(function(d) {\n        s += '<li><a style=\"cursor:pointer;\">' + d.name + '</a></li>';\n      });\n\n      s += '</ul></div>';\n\n      // Render the string into HTML\n      d3.select('#info')\n        .html(s);\n\n      d3.selectAll('#info ul a').on('click', function(d, i) {\n        sinclick(suggestions[i]);\n        editForm();\n        preFillFormA(suggestions[i]);\n      });\n    }\n\n    // Prefilling the form for editing...\n    function preFillFormA(obj) {\n      // Time to prefill the form...\n      d3.selectAll('#name').text(function(d) {\n        this.value = obj.name;\n      });\n\n      if(obj.location !== null) {\n        d3.json(\"/cities\", function(error, cities){\n          var location = obj.location;\n          var cityNodes = cities.nodes;\n          for (var i = 0; i < location.length; i++) {\n            var string = location[i].location;\n            var splitString = string.split(\",\");\n            $(\"#location-\" + i).after('<div id=\"location-' + (i + 1) + '\" class=\"input-control text\" data-role=\"input-control\"><input type=\"text\" name=\"location\" id=\"location\" class=\"locations\" placeholder=\"City\" list=\"list-location\" style=\"width:50%;\"/><input type=\"text\" id=\"state\" placeholder=\"State\" style=\"width:22%;\"/><input type=\"text\" id=\"country\" placeholder=\"Country\" style=\"width:28%;\"/></div>');\n            d3.select('#location-' + i + ' input[name=\"location\"]').on('keyup', null);\n            d3.select('#location-' + i + ' input[name=\"location\"]').text(function(e) {\n              $(this).val(splitString[0]);\n              input1 = $(this).siblings(\"#state\");\n              input2 = $(this).siblings(\"#country\");\n\n              for (var j = 0; j < cityNodes.length; j++) {\n                var city = cityNodes[j];\n                if(city.City_Name == splitString[0]) {\n                  if(splitString.length === 2) {\n                    input1.val(city.State_Code);\n                  }\n                  if(splitString.length === 3) {\n                    input1.val(city.State_Code);\n                    input2.val(city.Country_Code);\n                  }\n                }\n              }\n            });\n          }\n        });\n\n        d3.select('#location-' + location.length + ' input[name=\"location\"]').on('keyup', function() {\n          add_input_locaions(location.length);\n        });\n      }\n\n      d3.selectAll('input[name=\"entitytype\"]').filter(function(d, i) {\n        if (this.value === obj.type)\n          this.checked = true;\n        else\n          this.checked = false;\n      });\n\n      if (obj.categories !== null) {\n        d3.selectAll('.webform-categories input').filter(function(d, i) {\n          if ((obj.categories).indexOf(d3.selectAll('.webform-categories h4')[0][i].textContent) > -1)\n            this.checked = true;\n          else\n            this.checked = false;\n        });\n      }\n\n      d3.selectAll('#website').text(function(d) {\n        this.value = obj.url;\n      });\n      d3.selectAll('#employee').text(function(d) {\n        this.value = obj.employees;\n      });\n\n      if (obj.key_people !== null) {\n        var keypeople = obj.key_people;\n        for (var i = 0; i < keypeople.length; i++) {\n          $(\"#key-people-\" + i).after('<div id=\"key-people-' + (i + 1) + '\" class=\"input-control text\" data-role=\"input-control\"><input type=\"text\" name=\"kpeople\" class=\"kpeople\" placeholder=\"Key Person\\'s Name\"\"/></div>');\n          d3.select('#key-people-' + i + ' input[name=\"kpeople\"]').on('keyup', null);\n          d3.select('#key-people-' + i + ' input[name=\"kpeople\"]').text(function(e) {\n            this.value = keypeople[i].name;\n          });\n        }\n        // keypeople.forEach(function(d, i) {\n        //   // typeIntoFields(d, 0, d3.selectAll('#keypeople input')[0][i]);\n\n\n        // });\n        d3.select('#key-people-' + keypeople.length + ' input[name=\"kpeople\"]').on('keyup', function() {\n          add_input_kp(keypeople.length);\n        });\n      }\n\n      if (obj.funding_received !== null) {\n        var fundingreceived = obj.funding_received;\n\n        fundingreceived.forEach(function(d, i) {\n          $(\"#funding-\" + i).after('<div id=\"funding-' + (i + 1) + '\"><div class=\"fund-input input-control text\" data-role=\"input-control\"><input type=\"text\" name=\"fund\" class=\"funder\" placeholder=\"Funder\" style=\"display:inline-block; width:50%;\" list=\"funding-received-list\"/><datalist id=\"funding-received-list\"></datalist><input type=\"text\" name=\"fund_amt\" class=\"fund_amt\" placeholder=\"Amount\" style=\"display:inline-block; width: 27%;\"/><input type=\"text\" name=\"fund_year\" class=\"fund_year\" placeholder=\"Year\" style=\"display:inline-block; width: 20%;\"/></div></div>');\n          addDataList('#funding-' + i + ' datalist');\n\n          d3.select('#funding-' + i + ' input[name=\"fund\"]').on('keyup', function() {\n            preFillName(this.value, '#funding-' + i + ' input[name=\"fund\"]');\n          });\n          d3.select('#funding-' + i + ' input[name=\"fund\"]').text(function(e) {\n            this.value = d.entity;\n          });\n          d3.select('#funding-' + i + ' input[name=\"fund_amt\"]').text(function(e) {\n            this.value = d.amount;\n          });\n          d3.select('#funding-' + i + ' input[name=\"fund_year\"]').text(function(e) {\n            this.value = d.year;\n          });\n        });\n        d3.select(\"#funding-\" + fundingreceived.length + \" input[name='fund']\").on(\"keyup\", function() {\n          add_input_fund(fundingreceived.length);\n        });\n      }\n\n      if (obj.funding_given !== null) {\n        var fundinggiven = obj.funding_given;\n\n        fundinggiven.forEach(function(d, i) {\n          $(\"#fundinggiven-\" + i).after('<div id=\"fundinggiven-' + (i + 1) + '\"><div class=\"fundgiven-input input-control text\" data-role=\"input-control\"><input type=\"text\" name=\"fundgiven\" class=\"fundee\" placeholder=\"Fundee\" style=\"display:inline-block; width:50%;\" list=\"funding-given-list\"/><datalist id=\"funding-given-list\"></datalist><input type=\"text\" name=\"fundgiven_amt\" class=\"fundgiven_amt\" placeholder=\"Amount\" style=\"display:inline-block; width: 27%;\"/><input type=\"text\" name=\"fundgiven_year\" class=\"fundgiven_year\" placeholder=\"Year\" style=\"display:inline-block; width: 20%;\"/></div></div>');\n          addDataList('#fundinggiven-' + i + ' datalist');\n\n          d3.select('#fundinggiven-' + i + ' input[name=\"fundgiven\"]').on('keyup', function() {\n            preFillName(this.value, '#fundinggiven-' + i + ' input[name=\"fundgiven\"]');\n          });\n          d3.select('#fundinggiven-' + i + ' input[name=\"fundgiven\"]').text(function(e) {\n            this.value = d.entity;\n          });\n          d3.select('#fundinggiven-' + i + ' input[name=\"fundgiven_amt\"]').text(function(e) {\n            this.value = d.amount;\n          });\n          d3.select('#fundinggiven-' + i + ' input[name=\"fundgiven_year\"]').text(function(e) {\n            this.value = d.year;\n          });\n        });\n        d3.select(\"#fundinggiven-\" + fundinggiven.length + \" input[name='fundgiven']\").on(\"keyup\", function() {\n          add_input_fund_given(fundinggiven.length);\n        });\n      }\n\n      if (obj.investments_received !== null) {\n        var investmentreceived = obj.investments_received;\n\n        investmentreceived.forEach(function(d, i) {\n          $(\"#investing-\" + i).after('<div id=\"investing-' + (i + 1) + '\"><div class=\"invest-input input-control text\" data-role=\"input-control\"><input type=\"text\" name=\"invest\" class=\"investor\" placeholder=\"Investor\" style=\"display:inline-block; width:50%;\" list=\"investment-received-list\"/><datalist id=\"investment-received-list\"></datalist><input type=\"text\" name=\"invest_amt\" class=\"invest_amt\" placeholder=\"Amount\" style=\"display:inline-block; width: 27%;\"/><input type=\"text\" name=\"invest_year\" class=\"invest_year\" placeholder=\"Year\" style=\"display:inline-block; width: 20%;\"/></div></div>');\n          addDataList('#investing-' + i + ' datalist');\n\n          d3.select('#investing-' + i + ' input[name=\"invest\"]').on('keyup', function() {\n            preFillName(this.value, '#investing-' + i + ' input[name=\"invest\"]');\n          });\n          d3.select('#investing-' + i + ' input[name=\"invest\"]').text(function(e) {\n            this.value = d.entity;\n          });\n          d3.select('#investing-' + i + ' input[name=\"invest_amt\"]').text(function(e) {\n            this.value = d.amount;\n          });\n          d3.select('#investing-' + i + ' input[name=\"invest_year\"]').text(function(e) {\n            this.value = d.year;\n          });\n\n        });\n        d3.select(\"#investing-\" + investmentreceived.length + \" input[name='invest']\").on(\"keyup\", function() {\n          add_input_invest(investmentreceived.length);\n        });\n      }\n\n      if (obj.investments_made !== null) {\n        var investmentsmade = obj.investments_made;\n\n        investmentsmade.forEach(function(d, i) {\n          $(\"#investmentmade-\" + i).after('<div id=\"investmentmade-' + (i + 1) + '\"><div class=\"investmade-input input-control text\" data-role=\"input-control\"><input type=\"text\" name=\"investmade\" class=\"investee\" placeholder=\"Investee\" style=\"display:inline-block; width:50%;\" list=\"investment-made-list\"/><datalist id=\"investment-made-list\"></datalist><input type=\"text\" name=\"investmade_amt\" class=\"investmade_amt\" placeholder=\"Amount\" style=\"display:inline-block; width: 27%;\"/><input type=\"text\" name=\"investmade_year\" class=\"investmade_year\" placeholder=\"Year\" style=\"display:inline-block; width: 20%;\"/></div></div>');\n          addDataList('#investmentmade-' + i + ' datalist');\n\n          d3.select('#investmentmade-' + i + ' input[name=\"investmade\"]').on('keyup', function() {\n            preFillName(this.value, '#investmentmade-' + i + ' input[name=\"investmade\"]');\n          });\n          d3.select('#investmentmade-' + i + ' input[name=\"investmade\"]').text(function(e) {\n            this.value = d.entity;\n          });\n          d3.select('#investmentmade-' + i + ' input[name=\"investmade_amt\"]').text(function(e) {\n            this.value = d.amount;\n          });\n          d3.select('#investmentmade-' + i + ' input[name=\"investmade_year\"]').text(function(e) {\n            this.value = d.year;\n          });\n\n        });\n        d3.select(\"#investmentmade-\" + investmentsmade.length + \" input[name='investmade']\").on(\"keyup\", function() {\n          add_input_invest_made(investmentsmade.length);\n        });\n      }\n\n      if (obj.data !== null) {\n        var dataProviders = obj.data;\n\n        dataProviders.forEach(function(d, i) {\n          $(\"#data-\" + i).after('<div id=\"data-' + (i + 1) + '\" class=\"input-control text\" data-role=\"input-control\"><input type=\"text\" name=\"data\" class=\"data-entity\" placeholder=\"Data Resource\" list=\"data-received-list\"/><datalist id=\"data-received-list\"></datalist></div>');\n          addDataList('#data-' + i + ' datalist');\n\n          d3.select('#data-' + i + ' input[name=\"data\"]').on('keyup', function() {\n            preFillName(this.value, '#data-' + i + ' input[name=\"data\"]');\n          });\n          d3.select('#data-' + i + ' input[name=\"data\"]').text(function(e) {\n            this.value = d.entity;\n          });\n        });\n        d3.select(\"#data-\" + dataProviders.length + \" input[name='data']\").on(\"keyup\", function() {\n          add_input_data(dataProviders.length);\n        });\n      }\n\n      d3.selectAll('#submit-A').on('click', function() {\n        d3.select('#name').style(\"border-color\", \"#d9d9d9\");\n        d3.select('#location').style(\"border-color\", \"#d9d9d9\");\n        displayFormB();\n        preFillFormB(obj);\n      });\n    }\n\n    function preFillFormB(obj) {\n      d3.selectAll('#nickname').text(function(d) {\n        this.value = obj.nickname;\n      });\n      d3.selectAll('#twitterhandle').text(function(d) {\n        this.value = obj.twitter_handle;\n      });\n\n      d3.selectAll('input[name=\"influence-type\"]').filter(function(d, i) {\n        if (obj.influence === \"local\" && this.value === \"Local Influence\")\n          this.checked = true;\n        else if (obj.influence === \"global\" && this.value === \"Global Influence\")\n          this.checked = true;\n        else\n          this.checked = false;\n      });\n\n      if (obj.collaborations !== null) {\n        var collaboration = obj.collaborations;\n\n        collaboration.forEach(function(d, i) {\n          // typeIntoFields(d, 0, d3.selectAll('#keypeople input')[0][i]);\n          $(\"#collaboration-\" + i).after('<div id=\"collaboration-' + (i + 1) + '\" class=\"input-control text\" data-role=\"input-control\"><input type=\"text\" name=\"collaboration\" class=\"collaborator\" placeholder=\"Collaborator\" list=\"collaborator-list\"/><datalist id=\"collaborator-list\"></datalist></div>');\n          addDataList('#collaboration-' + i + ' datalist');\n\n          d3.select('#collaboration-' + i + ' input[name=\"collaboration\"]').on('keyup', function() {\n            preFillName(this.value, '#collaboration-' + i + ' input[name=\"collaboration\"]');\n          });\n          d3.select('#collaboration-' + i + ' input[name=\"collaboration\"]').text(function(e) {\n            this.value = d.entity;\n          });\n\n        });\n\n        d3.select('#collaboration-' + collaboration.length + ' input[name=\"collaboration\"]').on('keyup', function() {\n          add_input_collab(collaboration.length);\n        });\n      }\n\n      if (obj.expenses !== null) {\n        var expenseValues = obj.expenses;\n\n        expenseValues.forEach(function(d, i) {\n          $(\"#expense-\" + i).after('<div id=\"expense-' + (i + 1) + '\"><div class=\"expense-input input-control text\" data-role=\"input-control\"><input type=\"text\" name=\"expense_amt\" class=\"expense_amt\" placeholder=\"Amount\" style=\"display:inline-block; width: 57%;\"/><input type=\"text\" name=\"expense_year\" class=\"expense_year\" placeholder=\"Year\" style=\"display:inline-block; width: 20%;\"/></div></div>');\n          d3.select('#expense-' + i + ' input[name=\"expense_amt\"]').on('keyup', null);\n          d3.select('#expense-' + i + ' input[name=\"expense_amt\"]').text(function(e) {\n            this.value = d.amount;\n          });\n          d3.select('#expense-' + i + ' input[name=\"expense_year\"]').text(function(e) {\n            this.value = d.year;\n          });\n        });\n        d3.select('#expense-' + expenseValues.length + ' input[name=\"expense_amt\"]').on('keyup', function() {\n          add_input_exp(expenseValues.length);\n        });\n      }\n\n      if (obj.revenue !== null) {\n        var revenueValues = obj.revenue;\n\n        revenueValues.forEach(function(d, i) {\n          $(\"#revenue-\" + i).after('<div id=\"revenue-' + (i + 1) + '\"><div class=\"revenue-input input-control text\" data-role=\"input-control\"><input type=\"text\" name=\"revenue_amt\" class=\"revenue_amt\" placeholder=\"Amount\" style=\"display:inline-block; width: 57%;\"/><input type=\"text\" name=\"revenue_year\" class=\"revenue_year\" placeholder=\"Year\" style=\"display:inline-block; width: 20%;\"/></div></div>');\n          d3.select('#revenue-' + i + ' input[name=\"revenue_amt\"]').on('keyup', null);\n          d3.select('#revenue-' + i + ' input[name=\"revenue_amt\"]').text(function(e) {\n            this.value = d.amount;\n          });\n          d3.select('#revenue-' + i + ' input[name=\"revenue_year\"]').text(function(e) {\n            this.value = d.year;\n          });\n        });\n        d3.select('#revenue-' + revenueValues.length + ' input[name=\"revenue_amt\"]').on('keyup', function() {\n          add_input_rev(revenueValues.length);\n        });\n      }\n    }\n\n    var forProfitObjects = [];\n    var nonProfitObjects = [];\n    var governmentObjects = [];\n    var individualObjects = [];\n\n    initialInfo();\n\n    // Initial display on sidebar\n    function initialInfo() {\n      var s = \"\";\n\n      var countTypes = [0, 0, 0, 0];\n\n      var forProfitsArray = [];\n      var nonProfitsArray = [];\n      var governmentArray = [];\n      var individualArray = [];\n\n      for (var x = 0; x < filteredNodes.length; x++) {\n        if (filteredNodes[x].type === \"Individual\") {\n          individualArray.push(filteredNodes[x].name);\n          individualObjects.push(filteredNodes[x]);\n          countTypes[3]++;\n        }\n        if (filteredNodes[x].type === \"Non-Profit\") {\n          nonProfitsArray.push(filteredNodes[x].name);\n          nonProfitObjects.push(filteredNodes[x]);\n          countTypes[1]++;\n        }\n        if (filteredNodes[x].type === \"For-Profit\") {\n          forProfitsArray.push(filteredNodes[x].name);\n          forProfitObjects.push(filteredNodes[x]);\n          countTypes[0]++;\n        }\n        if (filteredNodes[x].type === \"Government\") {\n          governmentArray.push(filteredNodes[x].name);\n          governmentObjects.push(filteredNodes[x]);\n          countTypes[2]++;\n        }\n      }\n\n\n      s += \"<h3 style='padding-bottom:10px;'>The Data</h3>\";\n\n\n      //  Printing to side panel within web application.\n      d3.select('#info')\n        .html(s)\n        .style('list-style', 'square');\n\n      d3.select('#info').append('div').attr('id', 'breakdown').style('width', '100%');\n\n      var x = d3.scale.linear()\n        .domain([0, d3.max(countTypes)])\n        .range([0, $('#breakdown').width()]);\n\n      var typesColor = 0;\n      var typesText = 0;\n\n      d3.select(\"#breakdown\")\n        .selectAll(\"div\")\n        .data(countTypes)\n        .enter().append(\"div\")\n        .style(\"width\", function(d) {\n          return x(d) / 5 + \"%\";\n        })\n        .style(\"height\", \"20px\")\n        .style(\"font\", \"8px sans-serif\")\n        .style(\"background-color\", function(d) {\n          if (typesColor === 0) {\n            typesColor++;\n            return \"rgb(127,186,0)\";\n          }\n          if (typesColor === 1) {\n            typesColor++;\n            return \"rgb(0,164,239)\";\n          }\n          if (typesColor === 2) {\n            typesColor++;\n            return \"rgb(242,80,34)\";\n          }\n          if (typesColor === 3) {\n            typesColor++;\n            return \"rgb(255,185,0)\";\n          }\n        })\n        .style(\"text-align\", \"right\")\n        .style(\"padding\", \"3px\")\n        .style(\"margin\", \"1px\")\n        .style(\"color\", \"white\")\n        .text(function(d) {\n          if (typesText === 0) {\n            typesText++;\n            return;\n          }\n          if (typesText === 1) {\n            typesText++;\n            return;\n          }\n          if (typesText === 2) {\n            typesText++;\n            return;\n          }\n          if (typesText === 3) {\n            typesText++;\n            return;\n          }\n        });\n\n      var t = \"\";\n\n      t += \"<h3 style='padding-top:15px; color:rgb(127,186,0);'>For-Profit (\" + countTypes[0] + \"):</h3> \";\n      for (var x = 0; x < forProfitsArray.length; x++) {\n        if (x === forProfitsArray.length - 1) {\n          t += \"<a class='for-profit-entity' style='font-size:16px; cursor:pointer;'>\" + forProfitsArray[x] + \"</a>\";\n        } else {\n          t += \"<a class='for-profit-entity' style='font-size:16px; cursor:pointer;'>\" + forProfitsArray[x] + \", </a>\";\n        }\n      }\n      t += \"<h3 style='padding-top:15px; color:rgb(0,164,239);'>Non-Profit (\" + countTypes[1] + \"):</h3> \";\n      for (var x = 0; x < nonProfitsArray.length; x++) {\n        if (x === nonProfitsArray.length - 1) {\n          t += \"<a class='non-profit-entity' style='font-size:16px; cursor:pointer;'>\" + nonProfitsArray[x] + \"</a>\";\n        } else {\n          t += \"<a class='non-profit-entity' style='font-size:16px; cursor:pointer;'>\" + nonProfitsArray[x] + \", </a>\";\n        }\n      }\n      t += \"<h3 style='padding-top:15px; color:rgb(242,80,34);'>Government (\" + countTypes[2] + \"):</h3> \";\n      for (var x = 0; x < governmentArray.length; x++) {\n        if (x === governmentArray.length - 1) {\n          t += \"<a class='government-entity' style='font-size:16px; cursor:pointer;'>\" + governmentArray[x] + \"</a>\";\n        } else {\n          t += \"<a class='government-entity' style='font-size:16px; cursor:pointer;'>\" + governmentArray[x] + \", </a>\";\n        }\n      }\n      t += \"<h3 style='padding-top:15px; color:rgb(255,185,0);'>Individual (\" + countTypes[3] + \"):</h3> \";\n      for (var x = 0; x < individualArray.length; x++) {\n        if (x === individualArray.length - 1) {\n          t += \"<a  class='individual-entity' style='font-size:16px; cursor:pointer;'>\" + individualArray[x] + \"</a>\";\n        } else {\n          t += \"<a  class='individual-entity' style='font-size:16px; cursor:pointer;'>\" + individualArray[x] + \", </a>\";\n        }\n      }\n\n      d3.select('#info')\n        .append('text')\n        .style('padding-bottom', '20px')\n        .html(t);\n\n    }\n\n    d3.selectAll('.for-profit-entity').on('click', function(n, i) {\n\n      sinclick(forProfitObjects[i]);\n\n    });\n\n    d3.selectAll('.non-profit-entity').on('click', function(n, i) {\n\n      sinclick(nonProfitObjects[i]);\n\n    });\n\n    d3.selectAll('.individual-entity').on('click', function(n, i) {\n\n      sinclick(individualObjects[i]);\n\n    });\n\n    d3.selectAll('.government-entity').on('click', function(n, i) {\n\n      sinclick(governmentObjects[i]);\n\n    });\n\n    //click-location works here...\n    d3.selectAll('.click-location').on('click', function(r) {\n\n      handleQuery(this.innerHTML);\n    });\n\n\n    searchAutoComplete();\n\n\n\n\n    function searchAutoComplete() {\n      var s = \"\";\n\n      filteredNodes.forEach(function(d) {\n        name = d.name.toLowerCase();\n        nickname = d.nickname.toLowerCase();\n        var splitLocations = d.location;\n\n        if (!(name in entitiesHash)) {\n          entitiesHash[name] = d;\n          sortedNamesList.push(d.name);\n          // sortedNamesList.push({ id: d.id, name: d.name })\n        }\n\n        if (!(nickname in entitiesHash)) {\n          entitiesHash[nickname] = d;\n          sortedNamesList.push(d.nickname);\n        }\n\n        if(splitLocations) {\n          splitLocations.forEach(function(l) {\n            var location = l.location;\n            var lwcLocation = location.toLowerCase();\n            (!(lwcLocation in locationsHash)) ? (locationsHash[lwcLocation] = [], locationsHash[lwcLocation].push(d), sortedLocationsList.push(location)) : (locationsHash[lwcLocation].push(d));\n          });\n        }\n      });\n\n\n      // entitiesHash = _.sortBy(entitiesHash, function(value, key, object){\n      //   return key;\n      // });\n\n\n      sortedNamesList = _.sortBy(sortedNamesList, function(names) {\n        return names.toLowerCase();\n      });\n\n      sortedLocationsList = _.sortBy(sortedLocationsList, function(locations) {\n        return locations.toLowerCase();\n      });\n\n      sortedSearchList = _.sortBy(sortedNamesList.concat(sortedLocationsList), function(keys) {\n        return keys;\n      });\n\n      for (var count = 0; count < sortedSearchList.length; count++) {\n        s += '<option value=\"' + sortedSearchList[count] + '\">';\n      }\n\n      // d3.select('.filter-name-location datalist')\n      //     .html(s);\n\n\n\n    }\n\n    //filter the sortedSearchList on keyup\n    $('#search-text').autocomplete({\n      lookup: sortedSearchList,\n      appendTo: $('.filter-name-location'),\n      onSelect: function (suggestion) {\n        handleQuery(suggestion.value);\n      }\n    }).on('keyup', function(){\n      handleQuery(this.value);\n    });\n\n    d3.selectAll('option').on('keydown', function(n, i) {\n      if (d3.event.keyCode === 13) {\n        var query = (d3.selectAll('option'))[0][i].value;\n        handleQuery(query);\n      }\n    });\n\n    function handleQuery(query) {\n\n      query = query.toLowerCase();\n\n      if (query in entitiesHash) {\n\n        sinclick(entitiesHash[query]);\n      }\n\n      if (query in locationsHash) {\n        fundLink.style(\"opacity\", function(l) {\n          var locationSource = l.source.location;\n          var locationTarget = l.target.location;\n          if(locationSource && locationTarget){\n            for(var i =0; i < locationSource.length; i++){\n              for(var j=0; j<locationTarget.length; j++){\n                return (locationSource[i].location.toLowerCase() === query && locationTarget[j].location.toLowerCase() === query) ? 1 : 0.05;\n              }\n            }\n          }\n        });\n\n        investLink.style(\"opacity\", function(l) {\n          var locationSource = l.source.location;\n          var locationTarget = l.target.location;\n          if(locationSource && locationTarget){\n            for(var i =0; i<locationSource.length; i++){\n              for(var j=0; j<locationTarget.length; j++){\n                return (locationSource[i].location.toLowerCase() === query && locationTarget[j].location.toLowerCase() === query) ? 1 : 0.05;\n              }\n            }\n          }\n        });\n\n        porucsLink.style(\"opacity\", function(l) {\n          var locationSource = l.source.location;\n          var locationTarget = l.target.location;\n          if(locationSource && locationTarget){\n            for(var i =0; i<locationSource.length; i++){\n              for(var j=0; j<locationTarget.length; j++){\n                return (locationSource[i].location.toLowerCase() === query && locationTarget[j].location.toLowerCase() === query) ? 1 : 0.05;\n              }\n            }\n          }\n        });\n\n        dataLink.style(\"opacity\", function(l) {\n          var locationSource = l.source.location;\n          var locationTarget = l.target.location;\n          if(locationSource && locationTarget){\n            for(var i =0; i<locationSource.length; i++){\n              for(var j=0; j<locationTarget.length; j++){\n                return (locationSource[i].location.toLowerCase() === query && locationTarget[j].location.toLowerCase() === query) ? 1 : 0.05;\n              }\n            }\n          }\n        });\n\n        d3.selectAll('circle').style(\"stroke\", \"white\");\n\n        d3.selectAll('.node').style('opacity', function(n) {\n          var locationSource = n.location;\n          if(locationSource){\n            for(var i =0; i<locationSource.length; i++){\n              return (locationSource[i].location.toLowerCase().indexOf(query) === -1) ? 0.05 : 1;\n            }\n          }\n        }).select('text').style('opacity', 1);\n\n        node.on('mouseout', null)\n          .on('mouseover', null)\n          .on('click', null);\n\n        node.filter(function(n, i) {\n            return nodeInit[0][i].style.opacity == 1;\n          })\n          .on('mouseover', handleClickNodeHover);\n      }\n    }\n\n    dataListSortedNames = generateNamesDataList(sortedNamesList);\n    dataListSortedLocations = generateNamesDataList(sortedLocationsList);\n\n    function generateNamesDataList(sortedList) {\n      var datalist = \"\";\n      for (var i = 0; i < sortedList.length; i++) {\n        datalist += '<option value=\"' + sortedList[i] + '\">';\n        // '<option value=\"' + sortedList[i].id + '\">' + sortedList[i].name + '</option>'\n      }\n      return datalist;\n    }\n\n\n    function handleNodeHover(d) {\n\n      var s = textDisplay(d);\n\n      //  Printing to side panel within web application.\n      webform = editDisplay(d);\n\n      // For editing the data displayed within the side panel.\n      d3.select('#edit')\n        .html(webform);\n\n      d3.select('#info')\n        .html(s)\n        .style('list-style', 'square');\n\n      fundLink.transition()\n        .duration(350)\n        .delay(0).style(\"opacity\", function(l) {\n          return (d === l.source || d === l.target) ? 1 : 0.05;\n        });\n\n      investLink.transition()\n        .duration(350)\n        .delay(0).style(\"opacity\", function(l) {\n          return (d === l.source || d === l.target) ? 1 : 0.05;\n        });\n\n      porucsLink.transition()\n        .duration(350)\n        .delay(0).style(\"opacity\", function(l) {\n          return (d === l.source || d === l.target) ? 1 : 0.05;\n        });\n\n      dataLink.transition()\n        .duration(350)\n        .delay(0).style(\"opacity\", function(l) {\n          return (d === l.source || d === l.target) ? 1 : 0.05;\n        });\n\n      var isLinkTarget = function(link, node) {\n        return link.target.index === node.index;\n      }\n\n      var isLinkSource = function(link, node) {\n        return link.source.index === node.index;\n      }\n\n      var neighboringNodesIndices = {};\n      neighboringNodesIndices[d.ID] = 1;\n\n      fundingConnections.forEach(function(link) {\n        if (isLinkSource(link, d)) neighboringNodesIndices[link.target.index] = 1;\n        if (isLinkTarget(link, d)) neighboringNodesIndices[link.source.index] = 1;\n      });\n\n      investmentConnections.forEach(function(link) {\n        if (isLinkSource(link, d)) neighboringNodesIndices[link.target.index] = 1;\n        if (isLinkTarget(link, d)) neighboringNodesIndices[link.source.index] = 1;\n      });\n\n      collaborationConnections.forEach(function(link) {\n        if (isLinkSource(link, d)) neighboringNodesIndices[link.target.index] = 1;\n        if (isLinkTarget(link, d)) neighboringNodesIndices[link.source.index] = 1;\n      });\n\n      dataConnections.forEach(function(link) {\n        if (isLinkSource(link, d)) neighboringNodesIndices[link.target.index] = 1;\n        if (isLinkTarget(link, d)) neighboringNodesIndices[link.source.index] = 1;\n      });\n\n      d3.select(this).style(\"stroke\", \"rgba(0,0,0,0.6)\");\n\n      svg.selectAll('.node')\n        .transition()\n        .duration(350)\n        .delay(0)\n        .style(\"opacity\", function(n) {\n          if (n.ID in neighboringNodesIndices)\n            return \"1\";\n          else\n            return \"0.05\";\n        }).select('text').style('opacity', 1);\n\n      d3.select(this.parentNode).select(\"text\").transition()\n        .duration(350)\n        .delay(0).style(\"opacity\", 1).style(\"font-weight\", \"bold\");\n    }\n\n    function handleAdjNodeClick(d) {\n      fundLink.style(\"opacity\", function(l) {\n        if (d === l.source || d === l.target) {\n          return \"1\";\n        } else\n          return \"0.05\";\n      });\n\n      investLink.style(\"opacity\", function(l) {\n        if (d === l.source || d === l.target) {\n\n          return \"1\";\n        } else\n          return \"0.05\";\n      });\n\n      porucsLink.style(\"opacity\", function(l) {\n        if (d === l.source || d === l.target) {\n          return \"1\";\n        } else\n          return \"0.05\";\n      });\n\n      dataLink.style(\"opacity\", function(l) {\n        if (d === l.source || d === l.target) {\n          return \"1\";\n        } else\n          return \"0.05\";\n      });\n\n      var isLinkTarget = function(link, node) {\n        return link.target.index === node.index;\n      }\n\n      var isLinkSource = function(link, node) {\n        return link.source.index === node.index;\n      }\n\n      var neighboringNodesIndices = {};\n      neighboringNodesIndices[d.ID] = 1;\n\n      fundingConnections.forEach(function(link) {\n        if (isLinkSource(link, d)) neighboringNodesIndices[link.target.index] = 1;\n        if (isLinkTarget(link, d)) neighboringNodesIndices[link.source.index] = 1;\n      });\n\n      investmentConnections.forEach(function(link) {\n        if (isLinkSource(link, d)) neighboringNodesIndices[link.target.index] = 1;\n        if (isLinkTarget(link, d)) neighboringNodesIndices[link.source.index] = 1;\n      });\n\n      collaborationConnections.forEach(function(link) {\n        if (isLinkSource(link, d)) neighboringNodesIndices[link.target.index] = 1;\n        if (isLinkTarget(link, d)) neighboringNodesIndices[link.source.index] = 1;\n      });\n\n      dataConnections.forEach(function(link) {\n        if (isLinkSource(link, d)) neighboringNodesIndices[link.target.index] = 1;\n        if (isLinkTarget(link, d)) neighboringNodesIndices[link.source.index] = 1;\n      });\n\n      svg.selectAll('.node').style(\"opacity\", function(n) {\n        if (n.ID in neighboringNodesIndices)\n          return \"1\";\n        else\n          return \"0.05\";\n      });\n\n      d3.select(this).style(\"stroke\", \"black\").on('mouseout', null);\n\n      node.filter(function(singleNode) {\n          if (singleNode !== d) {\n            return singleNode;\n          }\n        }).style(\"stroke\", \"white\")\n        .on('mouseover', null)\n        .on('mouseout', null)\n        .on('click', null);\n\n      node.filter(function(l) {\n          return (neighborFund.indexOf(l.index) > -1 || neighborInvest.indexOf(l.index) > -1 || neighborPorucs.indexOf(l.index) > -1 || neighborData.indexOf(l.index) > -1 || l === d);\n        }).on('mouseover', handleClickNodeHover)\n        .on('click', sinclick);\n\n    }\n\n    function offNode() {\n      node\n        .style(\"stroke\", \"white\")\n        .on('mouseover', handleNodeHover)\n        .on('mouseout', offNode)\n        .on('click', sinclick);\n      //.on(\"dblclick\", dblclick);\n\n      fundLink\n        .transition()\n        .duration(350)\n        .delay(0)\n        .style(\"stroke\", \"rgb(111,93,168)\")\n        .style(\"opacity\", \"0.2\")\n        .style(\"stroke-width\", \"1px\");\n      // .each(function(){this.parentNode.insertBefore(this, this);});\n\n      investLink\n        .transition()\n        .duration(350)\n        .delay(0)\n        .style(\"stroke\", \"rgb(38,114,114)\")\n        .style(\"opacity\", \"0.2\")\n        .style(\"stroke-width\", \"1px\");\n      // .each(function(){this.parentNode.insertBefore(this, this);});\n\n      porucsLink\n        .transition()\n        .duration(350)\n        .delay(0)\n        .style(\"stroke\", \"rgb(235,232,38)\")\n        .style(\"opacity\", \"0.2\")\n        .style(\"stroke-width\", \"1px\");\n      // .each(function(){this.parentNode.insertBefore(this, this);});\n\n      dataLink\n        .transition()\n        .duration(350)\n        .delay(0)\n        .style(\"stroke\", \"rgb(191,72,150)\")\n        .style(\"opacity\", \"0.2\")\n        .style(\"stroke-width\", \"1px\");\n      // .each(function(){this.parentNode.insertBefore(this, this);});\n\n      // svg.selectAll('.node text').style('opacity', 1);\n      d3.selectAll('.node').transition()\n        .duration(350)\n        .delay(0)\n        .style(\"opacity\", \"1\");\n\n      d3.selectAll('.node').selectAll('text').transition()\n        .duration(350)\n        .delay(0).style('opacity', function(d) {\n\n          var textOpacity;\n          if (d.type === \"For-Profit\")\n            textOpacity = (fiveMostConnectedForProfit.hasOwnProperty(d.name)) ? 1 : 0;\n          if (d.type === \"Non-Profit\")\n            textOpacity = (fiveMostConnectedNonProfit.hasOwnProperty(d.name)) ? 1 : 0;\n          if (d.type === \"Individual\")\n            textOpacity = (fiveMostConnectedIndividuals.hasOwnProperty(d.name)) ? 1 : 0;\n          if (d.type === \"Government\")\n            textOpacity = (fiveMostConnectedGovernment.hasOwnProperty(d.name)) ? 1 : 0;\n\n          return textOpacity;\n        }).style('font-size', '14px').style('font-weight', 'normal');\n    }\n\n    function sinclick(d) {\n      clearResetFlag = 0;\n\n      handleClickNodeHover(d);\n\n      fundLink.transition()\n        .duration(350)\n        .delay(0).style(\"opacity\", function(l) {\n          if (d === l.source || d === l.target) {\n            return \"1\";\n          } else\n            return \"0.05\";\n        });\n\n      investLink.transition()\n        .duration(350)\n        .delay(0).style(\"opacity\", function(l) {\n          if (d === l.source || d === l.target) {\n\n            return \"1\";\n          } else\n            return \"0.05\";\n        });\n\n      porucsLink.transition()\n        .duration(350)\n        .delay(0).style(\"opacity\", function(l) {\n          if (d === l.source || d === l.target) {\n            return \"1\";\n          } else\n            return \"0.05\";\n        });\n\n      dataLink.transition()\n        .duration(350)\n        .delay(0).style(\"opacity\", function(l) {\n          if (d === l.source || d === l.target) {\n            return \"1\";\n          } else\n            return \"0.05\";\n        });\n\n      node.style(\"stroke\", function(singleNode) {\n        if (singleNode !== d) {\n          return \"white\";\n        } else\n          return \"black\";\n      }).on('mouseout', null);\n\n      node.filter(function(singleNode) {\n        if (singleNode !== d) {\n          // d3.select(singleNode).on('click', null);\n          return singleNode;\n        }\n      }).on('mouseover', null);\n\n      var neighborFund = graph.funding_connections.filter(function(link) {\n        return link.source.index === d.index || link.target.index === d.index;\n      }).map(function(link) {\n        return link.source.index === d.index ? link.target.index : link.source.index;\n      });\n\n      var neighborInvest = graph.investment_connections.filter(function(link) {\n        return link.source.index === d.index || link.target.index === d.index;\n      }).map(function(link) {\n        return link.source.index === d.index ? link.target.index : link.source.index;\n      });\n\n      var neighborPorucs = graph.collaboration_connections.filter(function(link) {\n        return link.source.index === d.index || link.target.index === d.index;\n      }).map(function(link) {\n        return link.source.index === d.index ? link.target.index : link.source.index;\n      });\n\n      var neighborData = graph.data_connections.filter(function(link) {\n        return link.source.index === d.index || link.target.index === d.index;\n      }).map(function(link) {\n        return link.source.index === d.index ? link.target.index : link.source.index;\n      });\n\n      svg.selectAll('.node').transition()\n        .duration(350)\n        .delay(0).style(\"opacity\", function(l) {\n          return (neighborFund.indexOf(l.index) > -1 || neighborInvest.indexOf(l.index) > -1 || neighborPorucs.indexOf(l.index) > -1 || neighborData.indexOf(l.index) > -1 || l === d) ? 1 : 0.05;\n        }).select('text').style('opacity', 1);\n\n\n      node.filter(function(l) {\n          return (neighborFund.indexOf(l.index) > -1 || neighborInvest.indexOf(l.index) > -1 || neighborPorucs.indexOf(l.index) > -1 || neighborData.indexOf(l.index) > -1 || l === d);\n        }).on('mouseover', handleClickNodeHover)\n        .on('click', function(l) {});\n\n    }\n\n    function dragstart(d) {\n      // d3.select(this).classed(\"fixed\", function(d){if(d !== centeredNode){d.fixed = true;} else d.fixed = false;});\n      d3.select(this).classed(\"fixed\", function(d) {\n        d.fixed = false;\n      });\n\n      node.on('mouseover', null)\n        .on('mouseout', null)\n        .on('click', null);\n    }\n\n    function drag(d) {\n      node.on('mouseover', null)\n        .on('mouseout', null)\n        .on('click', null);\n    }\n\n    function dragend(d) {\n      d3.select(this).classed(\"fixed\", function(d) {\n        d.fixed = true;\n      });\n\n\n      node.on('mouseover', handleNodeHover)\n        .on('mouseout', offNode)\n        .on('click', sinclick);\n    }\n\n\n\n    function tick(e) {\n      // Push different nodes in different directions for clustering.\n      var k = 8 * e.alpha;\n\n      /* Four quandrant separation */\n      filteredNodes.forEach(function(o, i) {\n        if (o.type !== null) {\n          if (o.type === \"Individual\") {\n            //o.x += k;\n            //o.y += k;\n            o.x += (k + k);\n            o.y += (k + k);\n          }\n          if (o.type === \"Non-Profit\") {\n            //o.x += -k;\n            //o.y += k;\n            o.x += (-k - k);\n            o.y += (k + k);\n          }\n          if (o.type === \"For-Profit\") {\n            //o.x += k;\n            //o.y += -k;\n            o.x += (k + k);\n            o.y += (-k - k);\n          }\n          if (o.type === \"Government\") {\n            //o.x += -k;\n            //o.y += -k;\n            o.x += (-k - k);\n            o.y += (-k - k);\n          }\n        }\n      });\n\n      if (_.isEmpty(centeredNode)) {\n        fundLink.attr(\"x1\", function(d) {\n            return d.source.x;\n          })\n          .attr(\"y1\", function(d) {\n            return d.source.y;\n          })\n          .attr(\"x2\", function(d) {\n            return d.target.x;\n          })\n          .attr(\"y2\", function(d) {\n            return d.target.y;\n          });\n\n        investLink.attr(\"x1\", function(d) {\n            return d.source.x;\n          })\n          .attr(\"y1\", function(d) {\n            return d.source.y;\n          })\n          .attr(\"x2\", function(d) {\n            return d.target.x;\n          })\n          .attr(\"y2\", function(d) {\n            return d.target.y;\n          });\n\n        porucsLink.attr(\"x1\", function(d) {\n            return d.source.x;\n          })\n          .attr(\"y1\", function(d) {\n            return d.source.y;\n          })\n          .attr(\"x2\", function(d) {\n            return d.target.x;\n          })\n          .attr(\"y2\", function(d) {\n            return d.target.y;\n          });\n\n        dataLink.attr(\"x1\", function(d) {\n            return d.source.x;\n          })\n          .attr(\"y1\", function(d) {\n            return d.source.y;\n          })\n          .attr(\"x2\", function(d) {\n            return d.target.x;\n          })\n          .attr(\"y2\", function(d) {\n            return d.target.y;\n          });\n\n        node.attr(\"cx\", function(d) {\n            return d.x = d.x;\n          })\n          .attr(\"cy\", function(d) {\n            return d.y = d.y;\n          });\n\n        textElement.attr(\"transform\", transformText);\n      } else {\n        fundLink.attr(\"x1\", function(d) {\n            if (d.source === centeredNode) {\n              d.source.x = centeredNode.x;\n\n              return d.source.x;\n            } else return d.source.x;\n          })\n          .attr(\"y1\", function(d) {\n            if (d.source === centeredNode) {\n              d.source.y = centeredNode.y;\n\n              return d.source.y;\n            } else return d.source.y;\n          })\n          .attr(\"x2\", function(d) {\n            if (d.target === centeredNode) {\n              d.target.x = centeredNode.x;\n\n              return d.target.x;\n            } else return d.target.x;\n          })\n          .attr(\"y2\", function(d) {\n            if (d.target === centeredNode) {\n              d.target.y = centeredNode.y;\n\n              return d.target.y;\n            } else return d.target.y;\n          });\n\n        investLink.attr(\"x1\", function(d) {\n            if (d.source === centeredNode) {\n              d.source.x = centeredNode.x;\n\n              return d.source.x;\n            } else return d.source.x;\n          })\n          .attr(\"y1\", function(d) {\n            if (d.source === centeredNode) {\n              d.source.y = centeredNode.y;\n\n              return d.source.y;\n            } else return d.source.y;\n          })\n          .attr(\"x2\", function(d) {\n            if (d.target === centeredNode) {\n              d.target.x = centeredNode.x;\n\n              return d.target.x;\n            } else return d.target.x;\n          })\n          .attr(\"y2\", function(d) {\n            if (d.target === centeredNode) {\n              d.target.y = centeredNode.y;\n\n              return d.target.y;\n            } else return d.target.y;\n          });\n\n        porucsLink.attr(\"x1\", function(d) {\n            if (d.source === centeredNode) {\n              d.source.x = centeredNode.x;\n\n              return d.source.x;\n            } else return d.source.x;\n          })\n          .attr(\"y1\", function(d) {\n            if (d.source === centeredNode) {\n              d.source.y = centeredNode.y;\n\n              return d.source.y;\n            } else return d.source.y;\n          })\n          .attr(\"x2\", function(d) {\n            if (d.target === centeredNode) {\n              d.target.x = centeredNode.x;\n\n              return d.target.x;\n            } else return d.target.x;\n          })\n          .attr(\"y2\", function(d) {\n            if (d.target === centeredNode) {\n              d.target.y = centeredNode.y;\n\n              return d.target.y;\n            } else return d.target.y;\n          });\n\n        dataLink.attr(\"x1\", function(d) {\n            if (d.source === centeredNode) {\n              d.source.x = centeredNode.x;\n\n              return d.source.x;\n            } else return d.source.x;\n          })\n          .attr(\"y1\", function(d) {\n            if (d.source === centeredNode) {\n              d.source.y = centeredNode.y;\n\n              return d.source.y;\n            } else return d.source.y;\n          })\n          .attr(\"x2\", function(d) {\n            if (d.target === centeredNode) {\n              d.target.x = centeredNode.x;\n\n              return d.target.x;\n            } else return d.target.x;\n          })\n          .attr(\"y2\", function(d) {\n            if (d.target === centeredNode) {\n              d.target.y = centeredNode.y;\n\n              return d.target.y;\n            } else return d.target.y;\n          });\n\n        node.attr(\"cx\", function(d, i) {\n            if ((d3.select(node)[0][0].data())[i].name === centeredNode.name) {\n              d.x = centeredNode.x;\n              return d.x;\n            } else return d.x = d.x;\n          })\n          .attr(\"cy\", function(d, i) {\n            if ((d3.select(node)[0][0].data())[i].name === centeredNode.name) {\n              d.y = centeredNode.y;\n              return d.y;\n            } else return d.y = d.y;\n          });\n\n        textElement.attr(\"transform\", transformText);\n\n      }\n\n    }\n\n    var determineVisibleNodes = function() {\n      //  Construct associative array of the visible nodes' indices (keys) and corresponding objects (values).\n      var visibleNodes = {};\n      for (var x = 0; x < nodeInit[0].length; x++) {\n        if (nodeInit[0][x].style.visibility === \"visible\") {\n          visibleNodes[nodeInit[0][x].__data__.ID] = nodeInit[0][x];\n        }\n      }\n      return visibleNodes;\n    };\n\n    /***\n\n      For the \"Connections\" checkboxes\n\n    ***/\n    var connectionsCheckboxActions = function() {\n\n      var connectionClasses = ['.invest', '.fund', '.porucs', '.data'];\n\n      d3.selectAll('.group-items.connections input')[0].forEach(function(d, i) {\n        d3.selectAll('#' + d.id).on('click', (function(d, i) {\n          return function() {\n            // d3.selectAll('#cb_fund')[0][0].checked\n            var visibleNodes = determineVisibleNodes();\n            document.getElementById(d.id).checked ? revealConnections(connectionClasses[i], visibleNodes) : hideConnections(connectionClasses[i]);\n            shouldCheckboxRemainUnchecked(connectionClasses[i], visibleNodes);\n          };\n        })(d, i));\n      });\n    };\n\n    // Only reveal the connections with both source and target nodes visible.\n    var revealConnections = function(selector, visibleNodes) {\n      // drawFundLink();\n      d3.selectAll(selector).style(\"visibility\", function(l) {\n        if (l.source.index in visibleNodes && l.target.index in visibleNodes && this.style.visibility === \"hidden\") {\n          return \"visible\";\n        } else\n          return \"hidden\";\n      });\n    };\n\n    //\n    var hideConnections = function(selector) {\n      d3.selectAll(selector).style(\"visibility\", function(l) {\n        return \"hidden\";\n      });\n    };\n\n\n    // If none of the type's nodes are visible, then the connections should not be visible as well (no nodes = no connections).\n    var shouldCheckboxRemainUnchecked = function(selector, visibleNodes) {\n      if (\n        visibleNodes.length === 0 ||\n        (\n          document.getElementById(cb_individ).checked &&\n          document.getElementById(cb_forpro).checked &&\n          document.getElementById(cb_nonpro).checked &&\n          document.getElementById(cb_gov).checked)\n        ) {\n        d3.select(selector).attr('checked', false);\n      }\n    }\n\n\n    connectionsCheckboxActions();\n\n    /***\n\n      For the \"Types\" checkboxes\n\n    ***/\n    var typesCheckboxActions = function() {\n      d3.selectAll('#cb_forpro, #cb_nonpro, #cb_gov, #cb_individ').on('click', function() {\n        $('#cb_forpro').is(':checked') ? nodeVisibility('For-Profit', 'visible') : nodeVisibility('For-Profit', 'hidden');\n        $('#cb_nonpro').is(':checked') ? nodeVisibility('Non-Profit', 'visible') : nodeVisibility('Non-Profit', 'hidden');\n        $('#cb_gov').is(':checked') ? nodeVisibility('Government', 'visible') : nodeVisibility('Government', 'hidden');\n        $('#cb_individ').is(':checked') ? nodeVisibility('Individual', 'visible') : nodeVisibility('Individual', 'hidden');\n\n        var visibleNodes = determineVisibleNodes();\n\n        toggleLinks(visibleNodes);\n      });\n    };\n\n    //  Initialize the display accordingly...\n    var nodeVisibility = function(type, visibility) {\n      d3.selectAll(\".node\").filter(function(d) {\n        if (d.type === type) return this;\n      }).style(\"visibility\", visibility);\n    };\n\n    var setVisibility = function(link, linkData, visibleNodes, connectionType) {\n      if (linkData.source.ID in visibleNodes && linkData.target.ID in visibleNodes) {\n        switch (connectionType) {\n          case \"Funding\":\n            ($('#cb_fund').is(':checked')) ? d3.select(link).style('visibility', 'visible'): d3.select(link).style('visibility', 'hidden');\n            break;\n          case \"Investment\":\n            ($('#cb_invest').is(':checked')) ? d3.select(link).style('visibility', 'visible'): d3.select(link).style('visibility', 'hidden');\n            break;\n          case \"Collaboration\":\n            ($('#cb_porucs').is(':checked')) ? d3.select(link).style('visibility', 'visible'): d3.select(link).style('visibility', 'hidden');\n            break;\n          case \"Data\":\n            ($('#cb_data').is(':checked')) ? d3.select(link).style('visibility', 'visible'): d3.select(link).style('visibility', 'hidden');\n            break;\n          default:\n            break;\n        }\n      } else {\n        d3.select(link).style('visibility', 'hidden');\n      }\n    };\n\n    //  For each rendered node, if the node is a for-profit, then for each connection type, determine if the node is a source or target of the connection, add the connection to the array.\n    var toggleLinks = function(visibleNodes) {\n\n      //  Finding links with nodes of a certain type.\n      fundLink.filter(function(link) {\n        setVisibility(this, this.__data__, visibleNodes, \"Funding\");\n      });\n      investLink.filter(function(link) {\n        setVisibility(this, this.__data__, visibleNodes, \"Investment\");\n      });\n      porucsLink.filter(function(link) {\n        setVisibility(this, this.__data__, visibleNodes, \"Collaboration\");\n      });\n      dataLink.filter(function(link) {\n        setVisibility(this, this.__data__, visibleNodes, \"Data\");\n      });\n\n      // porucsLink.filter(function(d){console.log(d3.select(this).style('visibility', 'hidden'))})\n\n      // Time to reflect these changes accordingly with the connection checkboxes to ensure consistency.\n      reflectConnectionChanges();\n    };\n\n    var reflectConnectionChanges = function() {\n      var visibleFundingConnections = fundLink.filter(function(link) {\n        return d3.select(this).style('visibility') === 'visible';\n      });\n      var visibleInvestmentConnections = investLink.filter(function(link) {\n        return d3.select(this).style('visibility') === 'visible';\n      });\n      var visibleCollaborationsConnections = porucsLink.filter(function(link) {\n        return d3.select(this).style('visibility') === 'visible';\n      });\n      var visibleDataConnections = dataLink.filter(function(link) {\n        return d3.select(this).style('visibility') === 'visible';\n      });\n\n      if (visibleFundingConnections[0].length === 0) {\n        $('#cb_fund').attr('checked', false);\n      }\n      if (visibleInvestmentConnections[0].length === 0) {\n        $('#cb_invest').attr('checked', false);\n      }\n      if (visibleCollaborationsConnections[0].length === 0) {\n        $('#cb_porucs').attr('checked', false);\n      }\n      if (visibleDataConnections[0].length === 0) {\n        $('#cb_data').attr('checked', false);\n      }\n    };\n\n    typesCheckboxActions();\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    d3.selectAll('#cb_emp, #cb_numtwit').on('click', function() {\n      if (document.getElementById(\"cb_emp\").checked) {\n        node.transition()\n          .duration(350)\n          .delay(0).attr(\"r\", function(d) {\n            if (d.employees !== null) return empScale(d.employees);\n            else return \"7\";\n          });\n        textElement.attr('transform', function(d) {\n          if (d.employees !== null) return translation(0, -(empScale(d.employees)));\n          else return translation(0, -7);\n        });\n      }\n\n      if (document.getElementById(\"cb_numtwit\").checked) {\n        node.transition()\n          .duration(350)\n          .delay(0).attr(\"r\", function(d) {\n            if (d.followers !== null) {\n              if (d.followers > 1000000) {\n                return \"50\";\n              } else {\n                return twitScale(d.followers);\n              }\n            } else\n              return \"7\";\n          });\n        textElement.attr('transform', function(d) {\n          if (d.followers !== null) {\n            return translation(0, -(twitScale(d.followers)));\n          } else\n            return translation(0, -7);\n        });\n      }\n    });\n\n    d3.select('svg').on('click', function() {\n      var m = d3.mouse(this);\n\n      if (clearResetFlag === 1) {\n        d3.event.preventDefault();\n        offNode();\n        d3.selectAll('g').classed(\"fixed\", function(d) {\n          d.fixed = false;\n        });\n        d3.selectAll('g').call(drag);\n        centeredNode = jQuery.extend(true, {}, {});\n\n\n        var force = d3.layout.force()\n          .nodes(rawNodes)\n          .size([width, height])\n          .links(connections)\n          .linkStrength(0)\n          .charge(function(d) {\n            // if (d.employees !== null)\n            //   return -5 * empScale(parseInt(d.employees));\n            // else\n            //   return -50;\n            if (d.render === 1) {\n              if (d.employees !== null)\n                return -6 * empScale(d.employees);\n              else\n                return -25;\n            } else\n              return 0;\n          })\n          .linkDistance(50)\n\n        .on(\"tick\", tick)\n          .start();\n      }\n      clearResetFlag = 1;\n    });\n\n  });\n}\n\nif (current_view == 'map') {\n  drawMap();\n  document.getElementById('cb_mapview').checked = true;\n  document.getElementById('cb_networkview').checked = false;\n} else if (current_view == 'network') {\n  drawGraph();\n  document.getElementById('cb_mapview').checked = false;\n  document.getElementById('cb_networkview').checked = true;\n} else {\n  drawGraph();\n  document.getElementById('cb_mapview').checked = false;\n  document.getElementById('cb_networkview').checked = true;\n}\n\nd3.selectAll('#cb_networkview').on('click', function() {\n    if (document.getElementById('cb_networkview').checked) {\n        drawGraph();\n        var map = document.getElementById('map');\n        map.parentNode.removeChild(map);\n    }\n});\n\nd3.selectAll('#cb_mapview').on('click', function() {\n    if (document.getElementById('cb_mapview').checked) {\n        console.log(\"asd\");\n        var network = document.getElementById('network');\n        network.parentNode.removeChild(network);\n        drawMap();\n    }\n});\n\n/************************************/\n/*                                  */\n/*           MAP VIEW               */\n/*                                  */\n/***********************************/\n\nvar d3MapTools, d3Layer;\n\nfunction drawMap() {\n  var width = 960,\n  height = 500;\n\n  var wmap = d3.select(\".content\").append(\"div\")\n  .attr(\"width\", width)\n  .attr(\"height\", height)\n  .attr(\"id\", \"map\");\n\n\n  map = new Microsoft.Maps.Map(document.getElementById('map'), {\n  credentials: 'Ah_CBBU6s6tupk_v45WVz46zMfevFT5Lkt9vpmwqV5LedzE221Kfridd7khQxD8M',\n  center: new Microsoft.Maps.Location(40, -80),\n  zoom: 4,\n  mapTypeId: Microsoft.Maps.MapTypeId.road\n  });\n\n  Microsoft.Maps.registerModule(\"D3OverlayModule\", \"scripts/D3OverlayManager.js\");\n  Microsoft.Maps.loadModule(\"D3OverlayModule\", {\n    callback: loadD3Layer\n  });\n\n\n\n  d3.select(self.frameElement).style(\"height\", height + \"px\");\n\n}\nvar d3Layers = {};\n\nfunction loadD3Layer() {\n  //Create an instance of the D3 Overlay Manager\n  // console.log(map);\n  d3MapTools = new D3OverlayManager(map);\n\n  var radius = 80;\n\n  var cityData = [];\n\n  var tip = d3.tip()\n    .attr('class', 'd3-tip')\n    .offset([0, 0])\n    .html(function(d){\n      return d.name + \"<br/> \" + d.val + (d.val > 1 ? \" Entities, \" : \" Entity, \")  + \"<br/>\" + parseFloat((d.val/d.totalCount) * 100).toFixed(2) + \"%\";\n\n  });\n\n\n  var donutTip = d3.tip()\n      .attr(\"class\", \"d3-tip\")\n      .offset([0, 0])\n      .html(function(d) {\n        return d.cityName + \", \" + d.type + \"<br/>\" + d.count + (d.count > 1 ? \" Entities, \" : \" Entity, \") + parseFloat((d.count/d.totalCount) * 100).toFixed(2) + \"%\";\n      });\n\n\n\n  var routeTip = d3.tip()\n          .attr(\"class\", \"d3-tip\")\n          .offset([0, 0])\n          .html(function(d) {\n            console.log(\"i'm been called\");\n            return d.cityA + \" - \" + d.cityB + \", <br/>\" + d.count + \"connections, <br/>\" +  parseFloat((d.count/d.totalCount) * 100).toFixed(2) + \"% of total connections\";\n\n          });\n\n\n  var locations = {};\n\n  var Links = [];\n  // var collabLinks = [];\n  // var dataLinks = [];\n  // var invstLinks = [];\n\n  // var topology;\n  // var connData;\n  // var locData;\n\n  queue()\n    .defer(d3.json, \"data/world-110m.json\")\n    .defer(d3.json, \"data/civicgeo.json\")\n    .defer(d3.json, \"data/civicgeoloc.json\")\n    .await(analyze);\n\n\n  function analyze(error, topology, connData, locData) {\n\n\n  if (error) {\n    throw error;\n    console.log(error);\n  }\n\n  var topology = topology;\n  var connData = connData;\n  var locData = locData;\n  // console.log(connData);\n\n\n\n  locationData = [];\n  var totalEntityCount = null;\n  locData.nodes.forEach(function (d) {\n    if (d.City_Lat == null || d.City_Long == null)\n    return;\n    key = d.City_Lat + \":\" + d.City_Long;\n    if (key in locations) {\n    locations[key] += d.entitycount\n    }\n    else {\n    locations[key] = d.entitycount\n    }\n    totalEntityCount += d.entitycount;\n  });\n  // console.log(totalEntityCount, \"totalEntityCount\");\n\n  var maxVal = 0;\n  // console.log(locations)\n  for (var loc in locations) {\n    // console.log(loc);\n    var d = {};\n    coor = loc.split(\":\");\n    d.val = locations[loc];\n    d.lat = coor[0];\n    d.lon = coor[1];\n    locData.nodes.forEach(function(place) {\n    var name;\n    if (place.City_Lat == d.lat && place.City_Long == d.lon) {\n      if (place.City_Name != null && place.State_Code != null) {\n      name = place.City_Name + \", \" + place.State_Code;\n      return d.name = name;\n      }\n      else {\n      // name = place.Co\n      }\n      // console.log(\"place: \" + name);\n      return d.name = name;\n    }\n    });\n    d.totalCount = totalEntityCount;\n    locationData[locationData.length] = d;\n\n    if (d.val > maxVal) {\n    maxVal = d.val;\n    }\n  }\n\n  // console.log(topology);\n  // console.log(connData);\n  // console.log(locData);\n  // console.log(locationData);\n\n  Object.keys(connData).forEach(function(key) {\n    if (key === \"nodes\")\n    return;\n\n    connData[key].forEach(function(d) {\n      var nodeA, nodeB;\n      nodeA = _.find(locData.nodes, function(x) {\n        return x.Entity_List.indexOf(\".\" + d.source +\".\") >= 0;\n      });\n      nodeB = _.find(locData.nodes, function(y) {\n        return y.Entity_List.indexOf(\".\" + d.target +\".\") >= 0;\n      });\n      if (nodeA == null || nodeB == null || (nodeA.City_Lat == null) || (nodeB.City_Lat == null))\n        return\n      else {\n        Links.push({\n          type: \"LineString\",\n          coordinates: [\n            [nodeA.City_Long, nodeA.City_Lat],\n            [nodeB.City_Long, nodeB.City_Lat]\n          ],\n          category: key,\n          cityA: nodeA.City_Name,\n          cityB: nodeB.City_Name\n        });\n      }\n    });\n  });\n\n  var totalConnCount = _.chain(connData).map(function(d, i) {\n    if (i === \"nodes\")\n      return 0;\n    return d.length;\n  }).reduce(function(a, b) { return a + b; }).value();\n  // console.log(totalConnCount, \"totalConnCount\");\n\n  // console.log(Links, \"before\");\n  Links = _.chain(Links)\n    .groupBy(function(d) {\n      return d.category + d.coordinates.toString();\n    })\n    .map(function(subArray, key){\n      var link = subArray[0];\n      link.count = subArray.length;\n      link.totalCount = totalConnCount;\n      return link;\n    })\n    .value();\n  // console.log(Links, \"after\");\n\n\n  d3Layers.d3Topology = d3MapTools.addLayer({\n    loaded: function (svg, projection) {\n    // console.log(Links, \" the links \");\n\n\n    svg.selectAll(\".topology\")\n      .data(topojson.feature(topology, topology.objects.countries).features)\n      .enter()\n      .append(\"path\")\n      .attr(\"d\", projection)\n      .attr(\"opacity\", 0)\n      .attr(\"class\", \"topology\");\n\n\n\n    },\n\n     viewChanged: function(svg, projection) {\n     }\n\n  });\n\n  d3Layers.d3Routes = d3MapTools.addLayer({\n    loaded: function(svg, projection) {\n\n      svg.call(routeTip);\n\n      strokeScale = d3.scale.log().domain([1, 100]).range([3, 15]);\n\n      svg.selectAll(\".routes\")\n        .data(Links)\n        .enter()\n        .append(\"path\")\n        .attr(\"class\", function(d){\n          return \"routes \" + d.category;\n        })\n        .attr(\"d\", projection)\n        .attr(\"fill-opacity\", 0)\n        .style(\"stroke-width\", function(d) {\n          return strokeScale(d.count) + \"px\";\n        })\n        .on('mouseover', routeTip.show)\n        .on('mousemove', routeTip.show)\n        .on('mouseout', routeTip.hide);\n\n    },\n\n    viewChanged: function(svg, projection) {\n      svg.attr(\"visibility\", map.getTargetZoom() < 10 ? \"visible\":\"hidden\");\n\n    }\n  });\n\n  d3Layers.d3Circles = d3MapTools.addLayer({\n    loaded: function (svg, projection) {\n\n    svg.call(tip);\n      // console.log(locationData);\n    radiusScale = d3.scale.linear().domain([0, maxVal]).range([5, 55]);\n\n      // console.log(maxVal)\n    svg.selectAll(\"circle\")\n       .data(locationData)\n       .enter()\n       .append(\"circle\")\n       .attr(\"transform\", function(d) {\n        return \"translate(\" + projection.projection()([d.lon, d.lat]) + \")\";\n       })\n       .attr(\"r\", function(d){\n        return radiusScale(d.val);\n      })\n      .style({\n        fill: \"grey\",\n        stroke: \"black\"\n      })\n      .attr(\"class\", \"pinpoint\")\n      .attr(\"opacity\", 0.8)\n      .on('mouseover', tip.show)\n      .on('mouseout', tip.hide)\n\n    },\n\n     viewChanged: function(svg, projection) {\n\n\n      svg.selectAll(\"circle\")\n        .attr(\"transform\", function(d) {\n          return \"translate(\" + projection.projection()([d.lon, d.lat]) + \")\" ;\n        });\n\n      svg.attr(\"visibility\", map.getTargetZoom() < 10 ? \"visible\":\"hidden\");\n\n     }\n  });\n\n      d3Layers.d3Donuts = d3MapTools.addLayer({\n\n        radius: 0.2,\n\n        loaded: function(svg, projection) {\n          var arc = d3.svg.arc();\n\n\n          svg.attr(\"visibility\", \"hidden\");\n          svg.call(donutTip);\n\n          var list = [];\n\n          function sum(arr) {\n            return _.reduce(arr, function(a, b) {\n              return a + b;\n            }, 0);\n          };\n\n          var totalCountList = _.chain(locData.nodes)\n            .groupBy(\"City_ID\")\n            .map(function(subArray, key){\n            return {\n              Id: key,\n              total: sum(_.pluck(subArray, \"entitycount\"))\n            }\n          })\n          .value();\n\n          // console.log(totalCountList);\n\n          var subtotal = 0;\n          var lasCityId = null;\n          locData.nodes.forEach(function(node) {\n            var etotal = _.find(totalCountList, function(x) {\n              return x.Id == node.City_ID ? x.total : 0\n            });\n            if (lasCityId !== node.City_ID) {\n              subtotal = 0;\n            }\n            list.push({\n              cityName: node.City_Name,\n              lat: node.City_Lat,\n              lon: node.City_Long,\n              type: node.Type,\n              count: node.entitycount,\n              totalCount: etotal.total,\n              start: subtotal\n            });\n            subtotal += node.entitycount;\n            lasCityId = node.City_ID;\n          });\n          // console.log(list);\n\n          svg.selectAll(\".arc\")\n            .data(list)\n            .enter()\n            .append(\"path\")\n            .attr(\"cityName\", function(d) {\n              return d.cityName;\n            })\n            .attr(\"class\", \"arc\")\n            .attr( \"d\", function(d) {\n              var sliceAngle = 2 * Math.PI / d.totalCount;\n              return arc({\n                // outerRadius: sf * (1 + 2 * Math.log(1 + d.totalCount)),\n                outerRadius: radius,\n                innerRadius: radius - 45,\n                startAngle: d.start * sliceAngle,\n                endAngle: (d.start + d.count) * sliceAngle\n              });\n            })\n            .attr(\"lat\", function(d){ return d.lat;})\n            .attr(\"lon\", function(d){ return d.lon;})\n            .attr(\"transform\", function(d) {\n              return \"translate(\" + projection.projection()([d.lon, d.lat]) + \")\";\n            })\n            .style(\"fill\", function(d) {\n              if (d.type === \"For-Profit\")\n                return \"#7cbd42\";\n              if (d.type === \"Non-Profit\")\n                return \"#269fd9\";\n              if (d.type === \"Individual\")\n                return \"#fbb717\";\n              if (d.type === \"Government\")\n                return \"#f05026\";\n\n              return \"#FFFFFF\";\n\n            })\n            .on('mouseover', donutTip.show)\n            .on('mouseout', donutTip.hide);\n\n\n        },\n\n        viewChanged: function(svg, projection) {\n\n          var arc = d3.svg.arc();\n\n          svg.selectAll(\".arc\")\n            .attr( \"d\", function(d) {\n              var sliceAngle = 2 * Math.PI / d.totalCount;\n              var outrad = 20 + (radius * Math.log(d.totalCount)/5 * map.getTargetZoom()/10);\n              return arc({\n                // outerRadius: sf * (1 + 2 * Math.log(1 + d.totalCount)),\n                outerRadius: outrad,\n                innerRadius: outrad - (0.75 * outrad),\n                startAngle: d.start * sliceAngle,\n                endAngle: (d.start + d.count) * sliceAngle\n              });\n            })\n            .attr(\"transform\", function(d) {\n              return \"translate(\" + projection.projection()([this.getAttribute(\"lon\"), this.getAttribute(\"lat\")]) + \")\";\n            });\n\n          svg.attr(\"visibility\", map.getTargetZoom() < 10 ? \"hidden\":\"visible\");\n\n        }\n      });\n  };\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app.js\n ** module id = 22\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./src/app.js?");

/***/ }

})